#pragma checksum "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "56d867b1dd91dfaa264bc766066cfa4bf8634b9b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Map_Recommendation), @"mvc.1.0.view", @"/Views/Map/Recommendation.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Map/Recommendation.cshtml", typeof(AspNetCore.Views_Map_Recommendation))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"56d867b1dd91dfaa264bc766066cfa4bf8634b9b", @"/Views/Map/Recommendation.cshtml")]
    public class Views_Map_Recommendation : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(29, 6181, true);
            WriteLiteral(@"
<style>

    .n {
        opacity: .8;
        font-size: 10px;
        margin-left: 4px;
        font-family: sans-serif;
        color: white;
        padding: 6px;
        background-color: #3C3176;
    }


    .legend {
        background-color: #fff;
        border-radius: 3px;
        bottom: 10px;
        box-shadow: 0 1px 2px rgba(0,0,0,0.10);
        font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
        padding: 10px;
        position: absolute;
        right: 30px;
        z-index: 1;
    }

        .legend h4 {
            margin: 0 0 10px;
        }

        .legend div span {
            border-radius: 50%;
            display: inline-block;
            height: 10px;
            margin-right: 5px;
            width: 10px;
        }


    /**
    * Set rules for how the map overlays
    * (information box and legend) will be displayed
    * on the page. */
    .map-overlay {
        position: absolute;
        bottom: 0;
        righ");
            WriteLiteral(@"t: 0;
        background: rgba(255, 255, 255, 0.8);
        font-size: 20px;
        margin-right: 20px;
        font-family: Helvetica, sans-serif;
        overflow: hidden;
        border-radius: 3px;
    }

        .map-overlay .block-content {
            margin-top: 10px;
            margin-left: 10px;
            font-family: Impact, Charcoal, sans-serif
        }

            .map-overlay .block-content .content-line {
                font-family: ""Trebuchet MS"", Helvetica, sans-serif
            }

    #features {
        top: 0px;
        height: 110px;
        margin-top: 10px;
        width: 250px;
    }



    .drop-placeholder {
        background-color: lightgray;
        height: 3.5em;
        padding-top: 12px;
        padding-bottom: 12px;
        line-height: 1.2em;
    }

    .mapboxgl-popup {
        max-width: 400px;
        font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
    }

    .color-box {
        width: 30px;
        height");
            WriteLiteral(@": 15px;
        display: inline-block;
        background-color: #ccc;
        position: relative;
        left: 5px;
        top: 5px;
    }

    .vidheader {
        position: relative;
        width: 100%;
        height: 300px;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

    video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        min-width: 100%;
        min-height: 100%;
        z-index: -1;
        object-position: center;
        object-fit: cover;
    }



    .culture-card {
        position: absolute;
        left: 0;
        top: 0;
        height: 700px;
        min-width: 500px;
        overflow-y: auto;
        overflow-x: hidden;
    }

        .culture-card .info-close {
            position: absolute;
            right: 2px;
            top: 2px;
            padding: 4px;
        }

        .culture-card .in");
            WriteLiteral(@"fo-content {
            padding: 4px;
        }


    .info-card {
        position: absolute;
        left: 0;
        top: 0;
        height: 700px;
        min-width: 350px;
        overflow-y: auto;
        overflow-x: hidden;
    }

        .info-card .info-close {
            position: absolute;
            right: 2px;
            top: 2px;
            padding: 4px;
        }
        .info-card .info-close-r {
            position: absolute;
            left: 2px;
            top: 2px;
            padding: 4px;
        }

        .info-card .info-content {
            padding: 4px;
        }


    .mapcontainer {
        position: relative;
    }

    #control-panel {
        display: none;
        width: 350px;
        padding: 8px 11px;
        padding-top: 35px;
        position: fixed;
        top: 0;
        left: 0;
        height: 100%;
        background-color: #ddd;
    }


    #control-panel-content {
        display: none;
    }

    #mai");
            WriteLiteral(@"n-content {
        width: 100%;
        height: auto;
        display: block;
        overflow: hidden;
        position: relative;
        z-index: 2;
    }

    img {
        display: block;
        max-width: 350px;
        max-height: 200px;
        width: 100%;
        height: 100%;
    }

    #image-container {
        min-width: 340px;
        min-height: 200px;
    }

    #image-container-r {
        min-width: 340px;
        min-height: 200px;
    }

    #more-content {
        min-width: 348px;
        min-height: 286px;
    }

    .chartProgress {
        min-width: 100px;
        min-height: 100px;
    }


    .chartItem {
        max-height: 125px;
    }

    .irs--round .irs-from, .irs--round .irs-to, .irs--round .irs-single {
        background-color: #F2A02A !important
    }

    .irs--round .irs-bar {
        background-color: #F2A02A !important
    }

    .irs--round .irs-handle {
        border: 4px solid #F2A02A !important
    }

    #");
            WriteLiteral(@"wrapper, img {
        width: 100%;
        height: 100%;
    }

    .axis {
        font: 14px sans-serif;
    }

    .color-panel {
        background-color: #ffee58;
        padding: 5px;
    }

    .panel-button {
        background-color: #F0B20B !important;
        color: #101010;
        height: 70px;
    }

    .content-font-family {
        font-family: Montserrat,-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';
    }

    .content-font-link {
        font-family: Montserrat,-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';
        color: #0085A1;
    }

    .loader-css {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.8) /*url(/spinner.svg) center center no-repeat");
            WriteLiteral("*/;\r\n        z-index: 5;\r\n    }\r\n    ");
            EndContext();
            BeginContext(6211, 353, true);
            WriteLiteral(@"@keyframes lds-rolling {
        0% {
            -webkit-transform: translate(-50%, -50%) rotate(0deg);
            transform: translate(-50%, -50%) rotate(0deg);
        }

        100% {
            -webkit-transform: translate(-50%, -50%) rotate(360deg);
            transform: translate(-50%, -50%) rotate(360deg);
        }
    }

    ");
            EndContext();
            BeginContext(6565, 1374, true);
            WriteLiteral(@"@-webkit-keyframes lds-rolling {
        0% {
            -webkit-transform: translate(-50%, -50%) rotate(0deg);
            transform: translate(-50%, -50%) rotate(0deg);
        }

        100% {
            -webkit-transform: translate(-50%, -50%) rotate(360deg);
            transform: translate(-50%, -50%) rotate(360deg);
        }
    }

    .lds-rolling {
        position: relative;
    }

        .lds-rolling div,
        .lds-rolling div:after {
            position: absolute;
            width: 160px;
            height: 160px;
            border: 20px solid #07abcc;
            border-top-color: transparent;
            border-radius: 50%;
        }

        .lds-rolling div {
            -webkit-animation: lds-rolling 1s linear infinite;
            animation: lds-rolling 1s linear infinite;
            top: 50%;
            left: 50%;
            /* bring your own prefixes */
            transform: translate(-50%, -50%);
        }

            .lds-rolling div:af");
            WriteLiteral(@"ter {
                -webkit-transform: rotate(90deg);
                transform: rotate(90deg);
            }

    .lds-rolling {
        -webkit-transform: translate(-100px, -100px) scale(1) translate(100px, 100px);
        transform: translate(-100px, -100px) scale(1) translate(100px, 100px);
    }
</style>
<!DOCTYPE html>

<html>
");
            EndContext();
            BeginContext(7939, 18608, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c2f6e29ec50475fb7be510895fb3a9f", async() => {
                BeginContext(7945, 15667, true);
                WriteLiteral(@"

    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">
    <meta name=""description"" content="""">
    <meta name=""author"" content="""">
    <title>RegionalVICInsight - Get recommendation</title>
    <!-- Fontawesome -->
    <link rel=""stylesheet"" href=""/fontawesome/css/font-awesome.min.css"">
    <!-- Bootstrap core CSS -->
    <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"" integrity=""sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"" crossorigin=""anonymous"">
    <!-- Custom fonts for this template -->
    <link href=""/vendor/fontawesome-free/css/all.min.css"" rel=""stylesheet"" type=""text/css"">
    <link href=""https://fonts.googleapis.com/css?family=Montserrat:400,700"" rel=""stylesheet"" type=""text/css"">
    <link href='https://fonts.googleapis.com/css?family=Kaushan+Script' rel='stylesheet' type='text/css'>

    <link href='https://api.tiles.mapbox.com/mapbox-g");
                WriteLiteral(@"l-js/v0.53.1/mapbox-gl.css' rel='stylesheet' />
    <link rel='/stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v3.1.6/mapbox-gl-geocoder.css' type='text/css' />

    <!-- Bootstrap core JavaScript -->
    <script src=""/vendor/jquery/jquery.min.js""></script>
    <script src=""/vendor/bootstrap/js/bootstrap.bundle.min.js""></script>
    <!-- Plugin JavaScript -->
    <script src=""/vendor/jquery-easing/jquery.easing.min.js""></script>
    <script src=""https://unpkg.com/tinyqueue@2.0.0/tinyqueue.min.js""></script>
    <script src=""/js/polylabel.js""></script>

    <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js""></script>
    
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.js'></script>

    <script src=""https://cdn.jsdelivr.net/npm/chart.js@2.8.0""></script>

    <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v3.1.6/mapbox-gl-geocoder.min.js'></script>

    <script src=");
                WriteLiteral(@"""/Scripts/ion.rangeSlider.min.js""></script>
    <script src=""https://api.tiles.mapbox.com/mapbox.js/plugins/turf/v2.0.0/turf.min.js""></script>

    <link rel=""stylesheet"" href=""/css/ion.rangeSlider.min.css"">

    <!-- Custom styles for this template -->
    <link href=""/css/agency.min.css"" rel=""stylesheet"">
    <link rel=""stylesheet"" type=""text/css"" href=""/css/style.css"">

    <script>

        var lga = new Object
        lga[""type""] = ""FeatureCollection""
        lga[""features""] = []
        window.onload = function () {
            
            //Load geojson file thread 1
            function ajax1() {
                return $.ajax({
                    url: ""https://raw.githubusercontent.com/kasaluoqi/root/master/lga48_1.json"", // path to file

                    dataType: 'text',
                    success: function (data) { // callback for successful completion
                        var tmpObj = JSON.parse(data);
                        lga[""features""] = lga[""features""].conca");
                WriteLiteral(@"t(tmpObj[""features""]);
                    },
                    error: function () { // callback if there's an error
                        alert(""error"");
                    }
                });
            }

            //Load geojson file thread 2
            function ajax2() {
                return $.ajax({
                    url: ""https://raw.githubusercontent.com/kasaluoqi/root/master/lga48_2.json"", // path to file

                    dataType: 'text',
                    success: function (data) { // callback for successful completion
                        var tmpObj = JSON.parse(data);
                        lga[""features""] = lga[""features""].concat(tmpObj[""features""]);
                    },
                    error: function () { // callback if there's an error
                        alert(""error"");
                    }
                });
            }

            //Load geojson file thread 3
            function ajax3() {
                return $.ajax({
  ");
                WriteLiteral(@"                  url: ""https://raw.githubusercontent.com/kasaluoqi/root/master/lga48_3.json"", // path to file

                    dataType: 'text',
                    success: function (data) { // callback for successful completion
                        var tmpObj = JSON.parse(data);
                        lga[""features""] = lga[""features""].concat(tmpObj[""features""]);
                    },
                    error: function () { // callback if there's an error
                        alert(""error"");
                    }
                });
            }

            //Load geojson file thread 4
            function ajax4() {
                return $.ajax({
                    url: ""https://raw.githubusercontent.com/kasaluoqi/root/master/lga48_4.json"", // path to file

                    dataType: 'text',
                    success: function (data) { // callback for successful completion
                        var tmpObj = JSON.parse(data);
                        lga[""features""");
                WriteLiteral(@"] = lga[""features""].concat(tmpObj[""features""]);
                    },
                    error: function () { // callback if there's an error
                        alert(""error"");
                    }
                });
            }

            //Load geojson file thread 5
            function ajax5() {
                return $.ajax({
                    url: ""https://raw.githubusercontent.com/kasaluoqi/root/master/lga48_5.json"", // path to file

                    dataType: 'text',
                    success: function (data) { // callback for successful completion
                        var tmpObj = JSON.parse(data);
                        lga[""features""] = lga[""features""].concat(tmpObj[""features""]);
                    },
                    error: function () { // callback if there's an error
                        alert(""error"");
                    }
                });
            }

            //Load geojson file thread 6
            function ajax6() {
          ");
                WriteLiteral(@"      return $.ajax({
                    url: ""https://raw.githubusercontent.com/kasaluoqi/root/master/lga48_6.json"", // path to file

                    dataType: 'text',
                    success: function (data) { // callback for successful completion
                        var tmpObj = JSON.parse(data);
                        lga[""features""] = lga[""features""].concat(tmpObj[""features""]);
                    },
                    error: function () { // callback if there's an error
                        alert(""error"");
                    }
                });
            }

            //Call functions and trigger when all of them are done.
            $.when(ajax1(), ajax2(), ajax3(), ajax4(), ajax5(), ajax6()).done(function (a1, a2, a3, a4, a5, a6) {
                // Add a layer showing the places.
                map.addSource(""states"", {
                    ""type"": ""geojson"",
                    ""data"": lga
                });
                //All colored states layer
");
                WriteLiteral(@"                map.addLayer({
                    ""id"": ""state-fills"",
                    ""type"": ""fill"",
                    ""source"": ""states"",
                    ""layout"": { 'visibility': 'visible' },
                    ""paint"": {
                        ""fill-color"":
                            [""get"", [""to-string"", [""get"", ""LGA_CODE18""]], [""literal"", myData]],
                        ""fill-opacity"": [""case"",
                            [""boolean"", [""feature-state"", ""hover""], false],
                            0.9,
                            0.7
                        ]
                    }
                });
                //Generated layer
                map.addLayer({
                    ""id"": ""cheo"",
                    ""type"": ""fill"",
                    ""source"": ""states"",
                    ""layout"": { 'visibility': 'none' },
                    ""paint"": {
                        ""fill-color"":
                            [""get"", [""to-string"", [""get"", ""LGA_CODE18""]");
                WriteLiteral(@"], [""literal"", cheo]],
                        ""fill-opacity"": [""case"",
                            [""boolean"", [""feature-state"", ""hover""], false],
                            1,
                            0.7
                        ]
                    }
                });
                //Label
                var featureCollection = {
                    ""type"": ""FeatureCollection"",

                    ""features"": [

                    ]
                }
                //Center point of label
                lga.features.forEach(function (feature) {
                    //draw.add(feature);
                    if (feature.geometry != null) {

                        var centroidPt = turf.center(feature);
                        centroidPt.properties.title = feature.properties.LGA_NAME18;
                        centroidPt.properties.LGA_CODE18 = feature.properties.LGA_CODE18;
                        featureCollection.features.push(centroidPt);
                    }
       ");
                WriteLiteral(@"         })
                //Add label in map
                map.addSource('label', {
                    'type': 'geojson',
                    'data': featureCollection
                });
                map.addLayer({
                    ""id"": ""region-label"",
                    ""type"": ""symbol"",
                    ""source"": ""label"",
                    ""layout"": {
                        'text-field': '{title}',
                        'text-font': [""Lato Bold""],
                        'text-size': {
                            ""base"": 2,
                            ""stops"": [
                                [12, 12],
                                [16, 16]
                            ]
                        },
                        ""text-padding"": 3,
                        ""text-letter-spacing"": 0.1,
                        ""text-max-width"": 7
                    },
                    ""paint"": {
                        ""text-color"":
                            [""get""");
                WriteLiteral(@", [""to-string"", [""get"", ""LGA_CODE18""]], [""literal"", textColor]],
                        ""text-halo-color"": ""hsl(0, 0%, 100%)"",
                        ""text-halo-width"": 1.5,
                        ""text-halo-blur"": 1
                    }
                });
                // When the user moves their mouse over the state-fill layer, update the feature state for the feature under the mouse.
                map.on(""mousemove"", ""state-fills"", function (e) {
                    map.getCanvas().style.cursor = e.point.length ? 'pointer' : '';

                    if (e.features.length > 0) {
                        if (hoveredStateId) {
                            map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
                        }
                        hoveredStateId = e.features[0].id;
                        map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: true });
                    }

                    var coordinates = e.f");
                WriteLiteral(@"eatures[0].geometry.coordinates.slice();
                    var code = e.features[0].properties.LGA_CODE18;

                    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
                        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
                    }

                    // Populate the popup and set its coordinates based on the feature found.
                    //popup.setLngLat([e.lngLat.lng, e.lngLat.lat])
                    //    .setHTML(code + ', ' + e.lngLat.lat + ', ' + e.lngLat.lng)
                    //    .addTo(map);
                });

                // When the mouse leaves the state-fill layer, update the feature state of the previously hovered feature.
                map.on(""mouseleave"", ""state-fills"", function (e) {

                    //map.getCanvas().style.cursor = e.point.length ? 'default' : '';

                    map.getCanvas().style.cursor = '';
                    //popup.remove();

                    if (hover");
                WriteLiteral(@"edStateId) {
                        map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
                    }
                    hoveredStateId = null;
                });

                //Show information block and hover effect
                map.on('mousemove', ""cheo"", function (e) {
                    var over = document.getElementById('features');
                    if (showCheoBlock)
                        features.style.display = ""block"";
                    else
                        features.style.display = ""none"";

                    var states = map.queryRenderedFeatures(e.point);
                    if (states.length > 0) {
                        for (var i = 0; i < states.length; i++) {
                            if (states[0].layer.id == ""cheo"") {
                                var name = states[0].properties.LGA_NAME18.substring(0, states[0].properties.LGA_NAME18.indexOf("" (""));
                                document.getElementById(");
                WriteLiteral(@"'pd').innerHTML = '<h5><strong>' + name + '</strong></h5><div class=""content-line"">' + displayList[states[0].properties.LGA_CODE18] + '</div>';
                                break;
                            }
                        }
                    } else {
                        document.getElementById('pd').innerHTML = '<p>Hover over a state!</p>';
                    }

                    if (e.features.length > 0) {
                        if (hoveredStateId) {
                            map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
                        }
                        hoveredStateId = e.features[0].id;
                        map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: true });
                    }
                });

                //Reset information block and hover effect
                map.on('mouseleave', ""cheo"", function (e) {
                    var over = document.getElementById('feature");
                WriteLiteral(@"s');
                    features.style.display = ""none""

                    if (hoveredStateId) {
                        map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
                    }
                    hoveredStateId = null;
                });

                //Popup regions name
                map.on('click', 'state-fills', function (e) {

                    var lgaCode = e.features[0].properties.LGA_CODE18;
                    if (clicked == lgaCode)
                        return;
                    clicked = lgaCode;


                    var content2 = document.querySelector('#card-content-2');
                    content2.style.display = ""none"";
                    var content1 = document.querySelector('#card-content');
                    content1.style.display = ""block"";

                    var content = document.querySelector('#more-content');

                    content.style.display = ""none"";
                    var image");
                WriteLiteral(@" = document.querySelector('#card-image');
                    image.style.display = ""none"";
                    var video = document.querySelector('#card-video');
                    video.style.display = ""none"";
                    $.ajax({
                        /**/
                        url: '");
                EndContext();
                BeginContext(23613, 28, false);
#line 689 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
                         Write(Url.Action("getInfo", "Map"));

#line default
#line hidden
                EndContext();
                BeginContext(23641, 2899, true);
                WriteLiteral(@"',
                        /**/
                        type: 'POST',
                        data: { code: lgaCode },
                        success: function (data) {
                            var item = JSON.parse(data);
                            var description = item[""descrption""];
                            var image_link = item[""image""];
                            var video_link = item[""video""];
                            var name = item[""name""];
                            var region = item[""region""];

                            // Display airport info
                            document.querySelector('#card-title').innerText = name;
                            document.querySelector('#card-subtitle').innerText = region;

                            document.querySelector('#card-description').innerText = description;

                            image.src = image_link;
                            video.src = video_link;

                            $('#more-content').fad");
                WriteLiteral(@"eIn(200);

                            function iloaded() {
                                //image.style.display = ""block"";
                                $('#card-image').fadeIn(200);
                            }

                            function vloaded() {
                                //video.style.display = ""block"";
                                $('#card-video').fadeIn(200);
                            }

                            if (image.complete) {
                                iloaded()
                            } else {
                                image.addEventListener('load', iloaded)
                            }

                            if (video.complete) {
                                vloaded()
                            } else {
                                video.addEventListener('load', vloaded)
                            }

                            if ($('#info-card').filter(':visible').length == 0) // all hidden
                ");
                WriteLiteral(@"            {
                                shrinkMap();
                                $('#info-card').fadeIn(300);
                                $('#culture-card').fadeOut(300);
                            }

                            // Ensure the info box is visible
                            document.querySelector('#info-card').style.display = 'block';

                        },
                    });


                });
                //When map is done loading
                map.on('idle', function () {
                    initMap = true;
                    if (initCodeColor && initMap) {
                        //Loader
                        $(""#loader"").hide();

                        enableAllButton();
                    }
                });
            });
        }
    </script>

");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(26547, 106, true);
            WriteLiteral("\r\n<style>\r\n\r\n    section {\r\n        margin-bottom: 0px;\r\n        padding: 20px 0;\r\n    }\r\n\r\n    </style>\r\n");
            EndContext();
            BeginContext(26653, 49452, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b092d94f36014197bfe631cc90fe3319", async() => {
                BeginContext(26659, 2231, true);
                WriteLiteral(@"

    <nav class=""navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink"" id=""mainNav"">
        <div class=""container"">
            <a class=""navbar-brand js-scroll-trigger"" href=""/"">RegionalVIC&nbsp;Insight </a>
            <button class=""navbar-toggler navbar-toggler-right"" type=""button"" data-toggle=""collapse"" data-target=""#navbarResponsive"" aria-controls=""navbarResponsive"" aria-expanded=""false"" aria-label=""Toggle navigation"">
                Menu
                <i class=""fas fa-bars""></i>
            </button>
            <div class=""collapse navbar-collapse"" id=""navbarResponsive"">
                <ul class=""navbar-nav ml-auto"" id=""myTab"">
                    <li class=""nav-item"">
                        <a class=""nav-link js-scroll-trigger"" href=""/"">Home</a>
                    </li>

                    <li class=""nav-item"">
                        <a class=""nav-link js-scroll-trigger"" href=""/Map/Recommendation"">Recommendation</a>
                    </li>
                    <li ");
                WriteLiteral(@"class=""nav-item dropdown"">
                        <a class=""nav-link dropdown-toggle text-nav"" href=""/Map"" id=""navbarDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                            Area Insight
                        </a>
                        <div class=""dropdown-menu"" aria-labelledby=""navbarDropdown"">
                            <a class=""dropdown-item content-font-family"" href=""/Map#description"">Regional Areas Information</a>
                            <a class=""dropdown-item content-font-family"" href=""/Map#living"">Rent</a>
                            <a class=""dropdown-item content-font-family"" href=""/Map#job"">Job Opportunity</a>
                            <a class=""dropdown-item content-font-family"" href=""/Map#safety"">Safety</a>
                            <a class=""dropdown-item content-font-family"" href=""/Map#culture"">Culture</a>
                        </div>
                    </li>
                    <li class=""nav-item"">
  ");
                WriteLiteral("                      <a class=\"nav-link js-scroll-trigger\" href=\"/News\">News</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n\r\n");
                EndContext();
                BeginContext(28973, 4505, true);
                WriteLiteral(@"
    <br>
    <br>
    <br>
    <br>
    <div class=""container"">
        <h1 class=""text-center"">Recommendation</h1>
        <br>
        <p class=""text-center font--18"">
            Set the importance level for different factors and get the top 10
            recommended areas for you.
        </p>
    </div>
    <section>
        <div class=""container"">

            <div class=""row"">
                <div class=""col-1"">
                </div>
                <div class=""col-4"">
                    <div class=""form-group"">
                        <label for=""acmSlider""
                               class=""font--18 text--lebel"">Rent</label>
                        <div class=""range-slider"">
                            <input type=""text"" class=""acmSlider"" value="""" />
                        </div>
                    </div>

                    <div class=""form-group"">
                        <label for=""range-slider""
                               class=""font--18 text--lebel"">You");
                WriteLiteral(@"r budget (per week)</label>
                        <div class=""range-slider"">
                            <input type=""text"" class=""recommendRanger"" value="""" />
                        </div>
                    </div>

                    <div class=""form-group"">
                        <label for=""amrSlider""
                               class=""font--18 text--lebel"">Safety</label>
                        <div class=""range-slider"">
                            <input type=""text"" class=""crmSlider"" value="""" />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label for=""pouSlider""
                               class=""font--18 text--lebel"">Population</label>

                        <div class=""range-slider"">
                            <input type=""text"" class=""pouSlider"" value="""" />
                        </div>
                    </div>

                </div>
                <div class=""col-2"">
        ");
                WriteLiteral(@"        </div>
                <div class=""col-4"">

                    <div class=""form-group"">
                        <label for=""inputCountryR"" class=""font--18 text--lebel"">
                            Choose your country
                        </label>
                        <select id=""inputCountryR"" class=""form-control"" onchange=""changeSelect()"">
                            <option selected>Disable</option>
                        </select>
                    </div>
                    <div class=""form-group"">
                        <label for=""culSlider""
                               class=""font--18 text--lebel"">Culture Background</label>
                        <div class=""range-slider"">
                            <input type=""text"" class=""culSlider"" value="""" />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label for=""inputIndustryR"" class=""font--18 text--lebel"">
                            Cho");
                WriteLiteral(@"ose your preferred industry
                        </label>
                        <select id=""inputIndustryR"" class=""form-control"" onchange=""changeSelect2()"">
                            <option selected>Disable</option>
                        </select>

                    </div>
                    <div class=""form-group"">
                        <label for=""jobSlider""
                               class=""font--18 text--lebel"">Job Opportunity</label>
                        <div class=""range-slider"">
                            <input type=""text"" class=""jobSlider"" value="""" />
                        </div>
                    </div>
                </div>

                <div class=""col-1"">
                </div>
            </div>
            <div class=""row"">

                <div class=""mt-3 col-12 text-center"">
                    <a class=""btn btn-primary btn-xl js-scroll-trigger disabled"" id=""rmd-confirm"" href=""#mapsection""><i id=""button-spinner"" class=""fa fa-circle-o-notch");
                WriteLiteral(@" fa-spin""></i>&nbsp;Loading</a>
                </div>

                <div class=""col-1"">
                </div>
            </div>
        </div>
    </section>
    <!-- map -->
    <section id=""mapsection"">
        <div class=""container-fluid"">
            <div class=""container-fluid"">
                <div class=""mapcontainer col-12"" id=""mapcontainer"">
                    <!-- Loader -->
");
                EndContext();
                BeginContext(33546, 6163, true);
                WriteLiteral(@"                    <div class=""lds-css ng-scope loader-css"" id=""loader"">
                        <div style=""width:100%;height:100%"" class=""lds-rolling""><div></div></div>
                    </div>

                    <div id=""map"" class=""mmap"" style=""height:700px""></div>
                    <div class='map-overlay' id='features' style=""display: none""><div class='block-content' id='pd'><p></p></div></div>

                    <div id=""culture-card"" class=""culture-card rounded shadow-lg bg-white"" style=""max-width: 500px; display: none;"">
                        <div class=""card"" id=""culture-card-content"" style=""display:block"">
                            <div width=""350"" height=""30"" id=""culture-info-content"">
                                <h2 class=""font--20 text--lebel font--bold p-4"" id=""culture-title""></h2>
                                <span class=""info-close"">
                                    <i id=""culture-card-close-button"" class=""fa fa-times"" role=""button"" aria-hidden=""true""></i>
");
                WriteLiteral(@"                                </span>
                            </div>
                            <hr>
                            <div id=""culture-list-content"">
                            </div>
                        </div>

                    </div>

                    <div id=""info-card-r"" class=""info-card rounded shadow-lg bg-white"" style=""max-width: 350px; display: none;"">
                        <div class=""card"" id=""info-card-content-r"" style=""display:block"">
                            <div width=""350"" height=""200"" id=""image-container-r"">
                                <span class=""info-close-r"">
                                    <i id=""info-card-close-button-r"" class=""fa fa-arrow-left"" role=""button"" aria-hidden=""true""></i>
                                </span>
                                <img class="""" width=""348"" height=""200"" id=""card-image-r"" src="""" />
                            </div>
                            <div class=""px-2 pb-2"" style=""height:500px"" id=""m");
                WriteLiteral(@"ore-content-r"">
                                <div class=""row"">
                                    <div class=""col-12"">
                                        <h2 class=""font--20 text--lebel font--bold mt-4"" id=""card-title-r""></h2>
                                        <p class=""font--18 subtitle--color mt-1"" id=""card-subtitle-r"">

                                        </p>
                                        <hr>
                                        <div id=""recommendation-rate"">

                                        </div>
                                        <hr>

                                    </div>
                                </div>

                                <div id=""recommendation-rate-chart col-12"">
                                    <canvas id=""myChart""></canvas>
                                </div>
                            </div>

                        </div>

                    </div>

                    <div id=""info-card"" cla");
                WriteLiteral(@"ss=""info-card rounded shadow-lg bg-white"" style=""max-width: 350px; display: none;"">
                        <div class=""card"" id=""card-content-2"" style=""display:none"">
                            <div width=""350"" height=""30"" id=""info-content-2"">
                                <h2 class=""font--20 text--lebel font--bold p-4"" id=""list-name""></h2>
                                <span class=""info-close"">
                                    <i id=""info-card-close-button-2"" class=""fa fa-times"" role=""button"" aria-hidden=""true""></i>
                                </span>
                            </div>
                            <div id='list' class=""list-group"">

                            </div>


                            <div id='slist' class=""list-group"">

                            </div>

                            <div id='recomd-list' class=""list-group"">

                            </div>
                        </div>

                        <div class=""card"" id=""card-cont");
                WriteLiteral(@"ent"">
                            <div width=""350"" height=""200"" id=""image-container"">
                                <span class=""info-close"">
                                    <i id=""info-card-close-button"" class=""fa fa-times"" role=""button"" aria-hidden=""true""></i>
                                </span>
                                <img class="""" width=""348"" height=""200"" id=""card-image"" src="""" />
                            </div>
                            <div class=""px-2 pb-2"" id=""more-content"">
                                <div class=""row"">
                                    <div class=""col-12"">
                                        <h2 class=""font--20 text--lebel font--bold mt-4"" id=""card-title""></h2>
                                        <p class=""font--18 subtitle--color mt-1"" id=""card-subtitle"">

                                        </p>
                                        <hr>
                                        <p class=""font--18 subtitle--color"" id=""card-des");
                WriteLiteral(@"cription"">

                                        </p>
                                        <hr>
                                    </div>
                                </div>
                            </div>

                            <div width=""350"" height=""200"" id=""image-container"">
                                <iframe id=""card-video"" width=""349"" height=""200"" src=""""></iframe>
                            </div>
                        </div>
                    </div>

                </div>

                <div class=""col-6"" style=""display:none"" id=""chart-section"">

                    <div class=""d-flex justify-content-center"" id=""buttons"">
                        <button id=""byKey"" class=""btn btn-info"">Top 10 Min</button>
                        <button id=""byValue"" class=""btn btn-info""> Top 10 Max</button>
                    </div>
                    <br>
                    <div id=""barchart""></div>
                </div>
            </div>

        </div>");
                WriteLiteral("\n\r\n    </section>\r\n");
                EndContext();
                BeginContext(39778, 11840, true);
                WriteLiteral(@"
    <!-- Footer -->
    <footer>
        <div class=""container"">
            <div class=""row"">
                <div class=""col-md-6"">
                    <span class=""copyright"">
                        Copyright &copy; RegionalVICInsight 2019.
                    </span>
                </div>
                <div class=""col-md-6"">
                    <ul class=""list-inline quicklinks"">
                        <li class=""list-inline-item"">
                            <a href=""/Home/Disclaimer"" class=""content-font-link"">Disclaimer</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </footer>

    <script>
        var lines;
        var toggleRecomd = false;

        var selected = """";
        var allCode = [20110, 20260, 20570, 20660, 20740, 20830, 20910, 21010, 21110, 21180, 21270, 21370, 21450, 21610, 21670, 21750, 21830, 21890, 22110, 22170, 22250, 22310, 22410, 22490, 22620, 22670, 22750, 22830, 22910, 22980, 2");
                WriteLiteral(@"3110, 23190, 23270, 23350, 23430, 23670, 23810, 23940, 24130, 24210, 24250, 24330, 24410, 24600, 24650, 24780, 24850, 24900, 24970, 25060, 25150, 25250, 25340, 25430, 25490, 25620, 25710, 25810, 25900, 25990, 26080, 26170, 26260, 26350, 26430, 26490, 26610, 26670, 26700, 26730, 26810, 26890, 26980, 27070, 27170, 27260, 27350, 27450, 27630, 29399, 29499, 29799];

        const TOKEN = ""pk.eyJ1Ijoia2FzYWx1b3FpIiwiYSI6ImNqbHZ2OW53bTB5aHozcW9kcDJibndycXUifQ.SeWM7HbI0owT-Rwuv14Ntg"";

        mapboxgl.accessToken = TOKEN;
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/light-v9',
            //style: 'mapbox://styles/mapbox/light-v9',
            center: [145.045837, -37.06823],
            zoom: 6.5
        });


        var nav = new mapboxgl.NavigationControl();
        map.addControl(nav, 'bottom-right');

        var hoveredStateId = null;
        var highlightedStateId = null;

        var minFBudget;
        var maxFBudget;
 ");
                WriteLiteral(@"       var minRBudget;
        var maxRBudget;
        var myData;
        var rcMap;
        var cheo = new Object;
        var textColor = new Object;
        var crimeCheo = new Object;
        var desyCheo = new Object;
        var initCodeColor = false;
        var initMap = false;
        var myChart;

        var moved = false;
        var clicked = """";
        var list = document.getElementById('list');
        var slist = document.getElementById('slist');
        var recomdList = document.getElementById('recomd-list');

        //Click recommendation confirm button
        $('#rmd-confirm').on('click', function () {
            $(this).parents('.dropdown').find('button.dropdown-toggle').dropdown('toggle')
            recommendation();
        });


        //Enable all buttons
        function disableAllButton() {
            $(""#rmd-confirm"").disable(true);
            $('#rmd-confirm').html('<i id=""button-spinner"" class=""fa fa-circle-o-notch fa-spin""></i>&nbsp;Loading')");
                WriteLiteral(@"

        }

        //Disable all buttons
        function enableAllButton() {
            $(""#rmd-confirm"").disable(false);
            $('#rmd-confirm').html('Confirm')

        }
        //Random color
        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }
        //asign color for regions
        function formRegionColorMap() {
            rcMap = new Map();
            rcMap.set('20110', getRandomColor());
            rcMap.set('20260', getRandomColor());
            rcMap.set('20570', getRandomColor());
            rcMap.set('20660', getRandomColor());
            rcMap.set('20740', getRandomColor());
            rcMap.set('20830', getRandomColor());
            rcMap.set('20910', getRandomColor());
            rcMap.set('21010', getRandomColor());
            rcM");
                WriteLiteral(@"ap.set('21110', getRandomColor());
            rcMap.set('21180', getRandomColor());
            rcMap.set('21270', getRandomColor());
            rcMap.set('21370', getRandomColor());
            rcMap.set('21450', getRandomColor());
            rcMap.set('21610', getRandomColor());
            rcMap.set('21670', getRandomColor());
            rcMap.set('21750', getRandomColor());
            rcMap.set('21830', getRandomColor());
            rcMap.set('21890', getRandomColor());
            rcMap.set('22110', getRandomColor());
            rcMap.set('22170', getRandomColor());
            rcMap.set('22250', getRandomColor());
            rcMap.set('22310', getRandomColor());
            rcMap.set('22410', getRandomColor());
            rcMap.set('22490', getRandomColor());
            rcMap.set('22620', getRandomColor());
            rcMap.set('22670', getRandomColor());
            rcMap.set('22750', getRandomColor());
            rcMap.set('22830', getRandomColor());
            rcMap.s");
                WriteLiteral(@"et('22910', getRandomColor());
            rcMap.set('22980', getRandomColor());
            rcMap.set('23110', getRandomColor());
            rcMap.set('23190', getRandomColor());
            rcMap.set('23270', getRandomColor());
            rcMap.set('23350', getRandomColor());
            rcMap.set('23430', getRandomColor());
            rcMap.set('23670', getRandomColor());
            rcMap.set('23810', getRandomColor());
            rcMap.set('23940', getRandomColor());
            rcMap.set('24130', getRandomColor());
            rcMap.set('24210', getRandomColor());
            rcMap.set('24250', getRandomColor());
            rcMap.set('24330', getRandomColor());
            rcMap.set('24410', getRandomColor());
            rcMap.set('24600', getRandomColor());
            rcMap.set('24650', getRandomColor());
            rcMap.set('24780', getRandomColor());
            rcMap.set('24850', getRandomColor());
            rcMap.set('24900', getRandomColor());
            rcMap.set('");
                WriteLiteral(@"24970', getRandomColor());
            rcMap.set('25060', getRandomColor());
            rcMap.set('25150', getRandomColor());
            rcMap.set('25250', getRandomColor());
            rcMap.set('25340', getRandomColor());
            rcMap.set('25430', getRandomColor());
            rcMap.set('25490', getRandomColor());
            rcMap.set('25620', getRandomColor());
            rcMap.set('25710', getRandomColor());
            rcMap.set('25810', getRandomColor());
            rcMap.set('25900', getRandomColor());
            rcMap.set('25990', getRandomColor());
            rcMap.set('26080', getRandomColor());
            rcMap.set('26170', getRandomColor());
            rcMap.set('26260', getRandomColor());
            rcMap.set('26350', getRandomColor());
            rcMap.set('26430', getRandomColor());
            rcMap.set('26490', getRandomColor());
            rcMap.set('26610', getRandomColor());
            rcMap.set('26670', getRandomColor());
            rcMap.set('2670");
                WriteLiteral(@"0', getRandomColor());
            rcMap.set('26730', getRandomColor());
            rcMap.set('26810', getRandomColor());
            rcMap.set('26890', getRandomColor());
            rcMap.set('26980', getRandomColor());
            rcMap.set('27070', getRandomColor());
            rcMap.set('27170', getRandomColor());
            rcMap.set('27260', getRandomColor());
            rcMap.set('27350', getRandomColor());
            rcMap.set('27450', getRandomColor());
            rcMap.set('27630', getRandomColor());
            rcMap.set('29399', getRandomColor());
            rcMap.set('29499', getRandomColor());
            rcMap.set('29799', getRandomColor());

            initialiseColor();
        }
        //Genrate color
        function initialiseColor() {
            myData = {
                ""20110"": rcMap.get('20110'),
                ""20260"": rcMap.get('20260'),
                ""20570"": rcMap.get('20570'),
                ""20660"": rcMap.get('20660'),
                ""2074");
                WriteLiteral(@"0"": rcMap.get('20740'),
                ""20830"": rcMap.get('20830'),
                ""20910"": rcMap.get('20910'),
                ""21010"": rcMap.get('21010'),
                ""21110"": rcMap.get('21110'),
                ""21180"": rcMap.get('21180'),
                ""21270"": rcMap.get('21270'),
                ""21370"": rcMap.get('21370'),
                ""21450"": rcMap.get('21450'),
                ""21610"": rcMap.get('21610'),
                ""21670"": rcMap.get('21670'),
                ""21750"": rcMap.get('21750'),
                ""21830"": rcMap.get('21830'),
                ""21890"": rcMap.get('21890'),
                ""22110"": rcMap.get('22110'),
                ""22170"": rcMap.get('22170'),
                ""22250"": rcMap.get('22250'),
                ""22310"": rcMap.get('22310'),
                ""22410"": rcMap.get('22410'),
                ""22490"": rcMap.get('22490'),
                ""22620"": rcMap.get('22620'),
                ""22670"": rcMap.get('22670'),
                ""22750"": rcMap.ge");
                WriteLiteral(@"t('22750'),
                ""22830"": rcMap.get('22830'),
                ""22910"": rcMap.get('22910'),
                ""22980"": rcMap.get('22980'),
                ""23110"": rcMap.get('23110'),
                ""23190"": rcMap.get('23190'),
                ""23270"": rcMap.get('23270'),
                ""23350"": rcMap.get('23350'),
                ""23430"": rcMap.get('23430'),
                ""23670"": rcMap.get('23670'),
                ""23810"": rcMap.get('23810'),
                ""23940"": rcMap.get('23940'),
                ""24130"": rcMap.get('24130'),
                ""24210"": rcMap.get('24210'),
                ""24250"": rcMap.get('24250'),
                ""24330"": rcMap.get('24330'),
                ""24410"": rcMap.get('24410'),
                ""24600"": rcMap.get('24600'),
                ""24650"": rcMap.get('24650'),
                ""24780"": rcMap.get('24780'),
                ""24850"": rcMap.get('24850'),
                ""24900"": rcMap.get('24900'),
                ""24970"": rcMap.get('24970'),");
                WriteLiteral(@"
                ""25060"": rcMap.get('25060'),
                ""25150"": rcMap.get('25150'),
                ""25250"": rcMap.get('25250'),
                ""25340"": rcMap.get('25340'),
                ""25430"": rcMap.get('25430'),
                ""25490"": rcMap.get('25490'),
                ""25620"": rcMap.get('25620'),
                ""25710"": rcMap.get('25710'),
                ""25810"": rcMap.get('25810'),
                ""25900"": rcMap.get('25900'),
                ""25990"": rcMap.get('25990'),
                ""26080"": rcMap.get('26080'),
                ""26170"": rcMap.get('26170'),
                ""26260"": rcMap.get('26260'),
                ""26350"": rcMap.get('26350'),
                ""26430"": rcMap.get('26430'),
                ""26490"": rcMap.get('26490'),
                ""26610"": rcMap.get('26610'),
                ""26670"": rcMap.get('26670'),
                ""26700"": rcMap.get('26700'),
                ""26730"": rcMap.get('26730'),
                ""26810"": rcMap.get('26810'),
           ");
                WriteLiteral(@"     ""26890"": rcMap.get('26890'),
                ""26980"": rcMap.get('26980'),
                ""27070"": rcMap.get('27070'),
                ""27170"": rcMap.get('27170'),
                ""27260"": rcMap.get('27260'),
                ""27350"": rcMap.get('27350'),
                ""27450"": rcMap.get('27450'),
                ""27630"": rcMap.get('27630'),
                ""29399"": rcMap.get('29399'),
                ""29499"": rcMap.get('29499'),
                ""29799"": rcMap.get('29799')
            };
            $.ajax({
                /**/
                url: '");
                EndContext();
                BeginContext(51619, 34, false);
#line 1316 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
                 Write(Url.Action("setCodeColors", "Map"));

#line default
#line hidden
                EndContext();
                BeginContext(51653, 1388, true);
                WriteLiteral(@"',
                /**/
                type: 'POST',
                data: { json: JSON.stringify(myData) },
                success: function (data) {
                    initCodeColor = true;
                    if (initCodeColor && initMap) {
                        //loader
                        $(""#loader"").hide();
                    }
                },
            });
        }
        //Shrink map
        function easing(t) {
            return t * (2 - t);
        }
        function shrinkMap() {
            if (!moved) {
                var deltaDistance = 300;
                map.panBy([-deltaDistance, 0], {
                    easing: easing
                });
            }
            moved = true;
        }

        //Extend map
        function extendMap() {
            if (moved) {
                var deltaDistance = 300;
                map.panBy([deltaDistance, 0], {
                    easing: easing
                });
            }
            moved");
                WriteLiteral(@" = false;
        }

        //Recommendation more info panel
        function showMore(LGA_Code, rate1, rate2, rate3, rate4, rate5, noOfBsn) {
            flytoPoly(LGA_Code);

            var image = document.querySelector('#card-image-r');
                image.style.display = ""none"";
            $.ajax({
                /**/
                url: '");
                EndContext();
                BeginContext(53042, 28, false);
#line 1362 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
                 Write(Url.Action("getMore", "Map"));

#line default
#line hidden
                EndContext();
                BeginContext(53070, 6367, true);
                WriteLiteral(@"',
                /**/
                type: 'POST',
                data: { code: LGA_Code },
                success: function (data) {
                    var item = JSON.parse(data);
                    var code = item[""LgaCode""];
                    var image_link = item[""LgaImage""];
                    var name = item[""LgaName""];
                    var region = item[""Region""];
                    var median = item[""Median""];
                    var rate = item[""Rate""];
                    var density = item[""Density""];

                    document.querySelector('#card-title-r').innerText = name;
                    document.querySelector('#card-subtitle-r').innerText = region;

                    image.src = image_link;

                    $('#more-content-r').fadeIn(200);

                    function iloaded() {
                        //image.style.display = ""block"";
                        $('#card-image-r').fadeIn(200);
                    }


                    if ");
                WriteLiteral(@"(image.complete) {
                        iloaded()
                    } else {
                        image.addEventListener('load', iloaded)
                    }

                    var rr = document.getElementById('recommendation-rate');
                    rr.innerHTML =
                        ""<div class='container'>"" +
                    ""<span>"" +
                    ""<b>Rent: <span style='color:"" + getColorByRate(rate1) + ""'> "" + getTextByRate(rate1) +
                        ""</b></span>. "" + ""Median rent: $"" + median + "" pw"" +
                    "" </span><br>"" +

                    ""<span>"" +
                    ""<b>Safety: <span style='color:"" + getColorByRate(rate2) + ""'> "" + getTextByRate(rate2) +
                    ""</b></span>. "" + ""Criminal rate: "" + Math.round(rate * 100) / 100 + ""%"" +
                    "" </span><br>"" +

                    ""<span>"" +
                    ""<b>Density: <span style='color:"" + getColorByRate(rate3) + ""'> "" + getTextByRate(rate3) +");
                WriteLiteral(@"
                    ""</b></span>. "" + ""Density: "" + density +
                    "" </span><br>"" +

                    ""<span>"" +
                    ""<b>Culture: <span style='color:"" + getColorByRate(rate4) + ""'> "" + getTextByRate(rate4) +
                    ""</b></span>. "" +
                    "" </span><br>"" +

                    ""<span>"" +
                    ""<b>Job: <span style='color:"" + getColorByRate(rate5) + ""'> "" + getTextByRate(rate5) +
                        ""</b></span>. "" +
                    (rate5 != 0 ? ""Business (no.): "" + noOfBsn : """") +
                    "" </span><br>"" +

                        ""</div>"";

                    if (myChart != null)
                    myChart.destroy();
                    var config = {
                        type: 'radar',
                        data: {
                            labels: ['Rent', 'Safety', 'Density', 'Culture', 'Job'],
                            datasets: [{
                                backgroundColo");
                WriteLiteral(@"r: ""rgba(0, 188, 212, 0.5)"",
                                borderColor: ""#00BCD4"",
                                data: [
                                    rate1,
                                    rate2,
                                    rate3,
                                    rate4,
                                    rate5
                                ]
                            }]
                        },
                        options: {
                            legend: {
                                display: false,
                            },
                            title: {
                                display: false,
                                text: 'Chart.js Radar Chart'
                            },
                            scale: {
                                ticks: {
                                    beginAtZero: true,

                                    fontSize: 10
                                },
                     ");
                WriteLiteral(@"           pointLabels: {
                                    fontSize: 20,
                                }
                            },
                            tooltips: {
                                callbacks: {
                                    label: function (tooltipItem, data) {
                                        var label = data.datasets[tooltipItem.datasetIndex].label || '';

                                        return label + "" Rating: "" + tooltipItem.yLabel ;
                                    }
                                }
                            }
                        }
                    }

                    var ctx = document.getElementById(""myChart"").getContext(""2d"");

                    myChart = new Chart(ctx, config);


                    if ($('#info-card-r').filter(':visible').length == 0) // all hidden
                    {
                        $('#info-card-r').fadeIn(300);
                        $('#info-card').fadeOut(");
                WriteLiteral(@"300);
                        $('#culture-card').fadeOut(300);
                    }

                    // Ensure the info box is visible
                    document.querySelector('#info-card-r').style.display = 'block';

                },
            });
        }
        //Red orange green brown
        function getColorByRate(rate) {
            return rate == 0 ? ""#795548"" : rate > 7 ? ""#4CAF50"" : rate > 3 ? ""#FFC107"" : ""#f44336"";
        }

        //Good bad empty average
        function getTextByRate(rate) {

            return rate == 0 ? ""N/A"" : rate > 7 ? ""Good"" : rate > 3 ? ""Average"" : ""Bad"";
        }
        //fly to the polygon on map
    function flytoPoly(LGA_Code, option=1) {

        var features = lga[""features""];
        //map.setFilter('state-fills', ['==', ['number', ['get', 'LGA_CODE18']], LGA_Code]);
        if (features) {
            if (features.length) {

                var feat;
                features.forEach(function (feature) {
             ");
                WriteLiteral("       if (parseInt(feature.properties.LGA_CODE18) === parseInt(LGA_Code)) {\r\n\r\n                        feat = feature;\r\n                        $.ajax({\r\n                            /**/\r\n                            url: \'");
                EndContext();
                BeginContext(59438, 30, false);
#line 1517 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
                             Write(Url.Action("getLngLat", "Map"));

#line default
#line hidden
                EndContext();
                BeginContext(59468, 9645, true);
                WriteLiteral(@"',
                            /**/
                            type: 'POST',
                            data: { code: LGA_Code },
                            success: function (data) {
                                var item = JSON.parse(data);
                                var lat = item[""latitude""]
                                var lng = item[""longitude""]
                                var p = [lng - (option == 1 ? 0.5 : 0) , lat]
                                map.flyTo({
                                    center: p,
                                    zoom: 8
                                });
                                //var deltaDistance = 300;
                            },
                        });

                        if (hoveredStateId) {
                            map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
                        }
                        hoveredStateId = feat.id;
                        map.setFeatur");
                WriteLiteral(@"eState({ source: 'states', id: hoveredStateId }, { hover: true });

                    }
                });

            }
        }

        }

        formRegionColorMap();

        //When start
    $(document).ready(function () {
        initialCountryListR();
        initialIndustryListR();
        for (var i = 0; i < allCode.length; i++) {
            cheo[allCode[i]] = ""#ddd"";
            textColor[allCode[i]] = ""#333"";
        }

        disableAllButton()

    });
        //Disable disabled button
        $('body').on('click', 'a.disabled', function (event) {
            event.preventDefault();
        });

        jQuery.fn.extend({
            disable: function (state) {
                return this.each(function () {
                    var $this = $(this);
                    $this.toggleClass('disabled', state);
                });
            }
        });

        //Reset all
        function resetAll() {
            var video = document.querySelector('#");
                WriteLiteral(@"card-video');
            video.src = """";
            extendMap();
            $('#info-card').fadeOut(300);
            $('#culture-card').fadeOut(300);
            $('#info-card-r').fadeOut(300);

            $(""#mapcontainer"").removeClass('col-6').addClass('col-12');
            $('#chart-section').hide();

            map.resize();
            showCheoBlock = false;
            resetLayer();
            selected = """";
            clicked = """";
            list.innerHTML = slist.innerHTML = recomdList.innerHTML = """";
        }
        //Buttons on panels
        document.querySelector('#info-card-close-button').addEventListener('click', function (event) {

            resetAll();
        });


        document.querySelector('#info-card-close-button-r').addEventListener('click', function (event) {

            $('#info-card-r').fadeOut(300);
            $('#info-card').fadeIn(300);
        });

        document.querySelector('#culture-card-close-button').addEventListener('click");
                WriteLiteral(@"', function (event) {

            resetAll();
        });

        document.querySelector('#info-card-close-button-2').addEventListener('click', function (event) {

            resetAll();
        });
        //Reset Layers
        function resetLayer() {

            for (var i = 0; i < allCode.length; i++) {
                cheo[allCode[i]] = ""#ddd"";
                textColor[allCode[i]] = ""#333"";
            }

            map.setPaintProperty(""region-label"", 'text-color', [""get"", [""to-string"", [""get"", ""LGA_CODE18""]], [""literal"", textColor]]);

            map.setLayoutProperty(""state-fills"", 'visibility', 'visible');
            map.setLayoutProperty(""cheo"", 'visibility', 'none');



        }

        var displayList = new Object

        //For Recommendation
        var acmWeight;
        var crmWeight;
        var pouWeight;
        var culWeight;
        var jobWeight;

        var $acmrange = $("".acmSlider""),
            instance,
            min = 1,
          ");
                WriteLiteral(@"  max = 5

        $acmrange.ionRangeSlider({
            skin: ""round"",
            type: ""single"",
            min: min,
            max: max,
            from: 2,
            values: [
                ""Not important"", ""Less important"", ""Average"", ""Important"", ""Very Important""
            ],
            onStart: updateA,
            onFinish: updateA
        });
        instance = $acmrange.data(""ionRangeSlider"");

        function updateA(data) {
            acmWeight = data.from;
            if (toggleRecomd) {
                //acmslider.disabled = true;
                recommendation();
            }
        }


        var $crmrange = $("".crmSlider""),
            instance,
            min = 1,
            max = 5

        $crmrange.ionRangeSlider({
            skin: ""round"",
            type: ""single"",
            min: min,
            max: max,
            from: 2,
            values: [
                ""Not important"", ""Less important"", ""Average"", ""Important"", ""Ver");
                WriteLiteral(@"y Important""
            ],
            onStart: updateC,
            onFinish: updateC
        });
        instance = $crmrange.data(""ionRangeSlider"");

        function updateC(data) {
            crmWeight = data.from;
            if (toggleRecomd) {
                //acmslider.disabled = true;
                recommendation();
            }
        }


        var $pourange = $("".pouSlider""),
            instance,
            min = 1,
            max = 5

        $pourange.ionRangeSlider({
            skin: ""round"",
            type: ""single"",
            min: min,
            max: max,
            from: 2,
            values: [
                ""Not important"", ""Less important"", ""Average"", ""Important"", ""Very Important""
            ],
            onStart: updateP,
            onFinish: updateP
        });
        instance = $pourange.data(""ionRangeSlider"");

        function updateP(data) {
            pouWeight = data.from;
            if (toggleRecomd) {
            ");
                WriteLiteral(@"    //acmslider.disabled = true;
                recommendation();
            }
        }

        var $culrange = $("".culSlider""),
            culinstance,
            min = 1,
            max = 5

        $culrange.ionRangeSlider({
            skin: ""round"",
            type: ""single"",
            min: min,
            max: max,
            from: 2,
            values: [
                ""Not important"", ""Less important"", ""Average"", ""Important"", ""Very Important""
            ],
            onStart: updateU,
            onFinish: updateU,

            disable: true
        });
        culinstance = $culrange.data(""ionRangeSlider"");

        function updateU(data) {
            culWeight = data.from;
            if (toggleRecomd) {
                //acmslider.disabled = true;
                recommendation();
            }
        }


        var $jobrange = $("".jobSlider""),
            jobinstance,
            min = 1,
            max = 5

        $jobrange.ionRangeSlid");
                WriteLiteral(@"er({
            skin: ""round"",
            type: ""single"",
            min: min,
            max: max,
            from: 2,
            values: [
                ""Not important"", ""Less important"", ""Average"", ""Important"", ""Very Important""
            ],
            onStart: updateI,
            onFinish: updateI,

            disable: true
        });
        jobinstance = $jobrange.data(""ionRangeSlider"");

        function updateI(data) {
            jobWeight = data.from;
            if (toggleRecomd) {
                //acmslider.disabled = true;
                recommendation();
            }
        }

        //Display or disable
        function changeSelect() {
            var typeSelectValue = $(""#inputCountryR"").val();

            if (typeSelectValue == "" "") {
                culinstance.update({
                    disable: true
                });
            }
            else{

                culinstance.update({
                    disable: false
         ");
                WriteLiteral(@"       });
            }
        }


        //Display or disable
        function changeSelect2() {

            var typeSelectValue = $(""#inputIndustryR"").val();

            if (typeSelectValue == "" "") {
                jobinstance.update({
                    disable: true
                });
            }
            else{

                jobinstance.update({
                    disable: false
                });
            }
        }

        var $rrange = $("".recommendRanger""),
            instance,
            min = 100,
            max = 550,
            from = 0,
            to = 0;

        $rrange.ionRangeSlider({
            skin: ""round"",
            type: ""double"",
            min: min,
            max: max,
            from: 100,
            to: 550,
            prefix: ""$"",
            step: 10,
            grid: true,             // show/hide grid
            onStart: updateRecommendInputs,
            onChange: updateRecommendInputs
        });
");
                WriteLiteral(@"        instance = $rrange.data(""ionRangeSlider"");


        function updateRecommendInputs(data) {
            from = data.from;
            to = data.to;
            minRBudget = from;
            maxRBudget = to;
        }

        //Industry list in recommendation
        function initialIndustryListR() {
            $(""#inputIndustryR"").empty();
             $.ajax({
            /**/
                url: '");
                EndContext();
                BeginContext(69114, 35, false);
#line 1856 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
                 Write(Url.Action("getAllIndustry", "Map"));

#line default
#line hidden
                EndContext();
                BeginContext(69149, 1047, true);
                WriteLiteral(@"',
            /**/
            type: 'POST',
            data: { },
                 success: function (data) {
                     var value = "" "";
                     var o = new Option(value, value);
                     /// jquerify the DOM object 'o' so we can use the html method
                     $(o).html(value);
                     $(""#inputIndustryR"").append(o);

                     var list = JSON.parse(data);
                     for (var i = 0; i < list.length; i++){
                         var value = list[i];
                         var o = new Option(value, value);
                        /// jquerify the DOM object 'o' so we can use the html method
                         $(o).html(value);
                         $(""#inputIndustryR"").append(o);
            }
            },
            });
        }

        //Country list in recommendation
        function initialCountryListR() {
            $(""#inputCountryR"").empty();
             $.ajax({
            /");
                WriteLiteral("**/\r\n            url: \'");
                EndContext();
                BeginContext(70197, 34, false);
#line 1884 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
             Write(Url.Action("getAllCountry", "Map"));

#line default
#line hidden
                EndContext();
                BeginContext(70231, 2223, true);
                WriteLiteral(@"',
            /**/
            type: 'POST',
            data: { },
                 success: function (data) {

                     var value = "" "";
                     var o = new Option(value, value);
                     /// jquerify the DOM object 'o' so we can use the html method
                     $(o).html(value);
                     $(""#inputCountryR"").append(o);

                     var list = JSON.parse(data);
                     for (var i = 0; i < list.length; i++){
                         var value = list[i];
                         var o = new Option(value, value);
                        /// jquerify the DOM object 'o' so we can use the html method
                         $(o).html(value);
                        $(""#inputCountryR"").append(o);
            }
            },
            });
        }
    //Recommendation
    function recommendation() {

        slist.style.display = ""none"";
        list.style.display = ""none"";
        recomdList.style.displa");
                WriteLiteral(@"y = ""block"";

        //Loader
        $(""#loader"").show();
        recomdList.innerHTML = """";

        //var minBudget = parseInt(document.getElementById(""min-bgt-recom"").value);
        //var maxBudget = parseInt(document.getElementById(""max-bgt-recom"").value);
        minRBudget = isNaN(minRBudget) ? 0 : minRBudget;
        maxRBudget = isNaN(maxRBudget) ? 1000 : maxRBudget;


        var country = $(""#inputCountryR"").val();

        var industry = $(""#inputIndustryR"").val();

        var calAcmWeight = acmWeight;
        var calCrmWeight = crmWeight;
        var calPouWeight = pouWeight;
        var calCulWeight = (country == "" "" ? 0 : culWeight);
        var calJobWeight = (industry == "" "" ? 0 : jobWeight);
        var sum = calAcmWeight + calCrmWeight + calPouWeight + calCulWeight + calJobWeight;
        calAcmWeight /= sum
        calCrmWeight /= sum
        calPouWeight /= sum
        calCulWeight /= sum
        calJobWeight /= sum



        document.querySelector('#card");
                WriteLiteral("-content\').style.display = \"none\";\r\n        document.querySelector(\'#list-name\').innerHTML = \"Recommendation result\";\r\n\r\n        $.ajax({\r\n            /**/\r\n            url: \'");
                EndContext();
                BeginContext(72455, 38, false);
#line 1947 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
             Write(Url.Action("getRecommendation", "Map"));

#line default
#line hidden
                EndContext();
                BeginContext(72493, 3605, true);
                WriteLiteral(@"',
            /**/
            type: 'POST',
            data: { min: minRBudget, max: maxRBudget, acmWeight: calAcmWeight, crmWeight: calCrmWeight, pouWeight: calPouWeight, culWeight: calCulWeight, jobWeight: calJobWeight, country: country, industry: industry },
            success: function (data) {
                toggleRecomd = true;

                var result = JSON.parse(data);
                var areas = result[""areas""];
                for (var i = 0; i < allCode.length; i++) {
                    cheo[allCode[i]] = ""#ddd"";
                    displayList[allCode[i]] = """";
                    textColor[allCode[i]] = '#999';
                }
                for (var i = 0; i < areas.length; i++) {
                    var code = areas[i][""code""];
                    cheo[code] = myData[code];
                    textColor[code] = '#333';
                }

                if ($('#info-card').filter(':visible').length == 0) // all hidden
                {
                    shri");
                WriteLiteral(@"nkMap();
                    $('#info-card').fadeIn(300);
                    $('#info-card-r').fadeOut(300);
                    $('#culture-card').fadeOut(300);
                }
                $('#card-content-2').fadeIn(300);
                $('#card-content').fadeOut(200);
                recomdList.innerHTML = result[""display""];

                var msg = result[""msg""];
                if (msg != """") {
                    document.querySelector('#list-name').innerHTML += ""<hr><div style='color:#f2262d'>"" + msg + ""</div>"";
                }
                showCheoBlock = false;

                map.setPaintProperty(""region-label"", 'text-color', [""get"", [""to-string"", [""get"", ""LGA_CODE18""]], [""literal"", textColor]]);

                map.setPaintProperty(""cheo"", 'fill-color', [""get"", [""to-string"", [""get"", ""LGA_CODE18""]], [""literal"", cheo]]);
                map.setLayoutProperty(""state-fills"", 'visibility', 'none');
                map.setLayoutProperty(""cheo"", 'visibility', 'visible')");
                WriteLiteral(@";

                //acmslider.disabled = false;
                //crmSlider.disabled = false;
                //pouSlider.disabled = false;

                //Loader
                $(""#loader"").hide();
            },
        });

    }

        //Hightlight the feature when hover in barchart
        function highlight(code, name) {
                features.style.display = ""none"";


            var queryFeature = lga[""features""];
            if (queryFeature.length) {

                var feature = queryFeature.find(function (element) {
                    return parseInt(element.properties.LGA_CODE18) === parseInt(code);
                });
                //feature = queryFeature[i];
                //if (parseInt(feature.properties.LGA_CODE18) === parseInt(code)) {

                document.getElementById('pd').innerHTML = '<h5><strong>' + name + '</strong></h5><div class=""content-line"">' + displayList[code] + '</div>';


                if (hoveredStateId) {
               ");
                WriteLiteral(@"     map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
                }
                hoveredStateId = feature.id;
                map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: true });


            }


        }
    </script>

    <!-- Contact form JavaScript -->
    <script src=""/js/jqBootstrapValidation.js""></script>
    <script src=""/js/contact_me.js""></script>
    <!-- Custom scripts for this template -->
    <script src=""/js/agency.js""></script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(76105, 11, true);
            WriteLiteral("\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
