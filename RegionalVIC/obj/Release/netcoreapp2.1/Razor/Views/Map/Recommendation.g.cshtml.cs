#pragma checksum "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c1d9ea4a1ff4200b42f14887db853987730e8cf5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Map_Recommendation), @"mvc.1.0.view", @"/Views/Map/Recommendation.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Map/Recommendation.cshtml", typeof(AspNetCore.Views_Map_Recommendation))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c1d9ea4a1ff4200b42f14887db853987730e8cf5", @"/Views/Map/Recommendation.cshtml")]
    public class Views_Map_Recommendation : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(29, 5238, true);
            WriteLiteral(@"
<style>

    .n {
        opacity: .8;
        font-size: 10px;
        margin-left: 4px;
        font-family: sans-serif;
        color: white;
        padding: 6px;
        background-color: #3C3176;
    }


    .legend {
        background-color: #fff;
        border-radius: 3px;
        bottom: 10px;
        box-shadow: 0 1px 2px rgba(0,0,0,0.10);
        font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
        padding: 10px;
        position: absolute;
        right: 30px;
        z-index: 1;
    }

        .legend h4 {
            margin: 0 0 10px;
        }

        .legend div span {
            border-radius: 50%;
            display: inline-block;
            height: 10px;
            margin-right: 5px;
            width: 10px;
        }


    /**
    * Set rules for how the map overlays
    * (information box and legend) will be displayed
    * on the page. */
    .map-overlay {
        position: absolute;
        bottom: 0;
        righ");
            WriteLiteral(@"t: 0;
        background: rgba(255, 255, 255, 0.8);
        font-size: 20px;
        margin-right: 20px;
        font-family: Helvetica, sans-serif;
        overflow: hidden;
        border-radius: 3px;
    }

        .map-overlay .block-content {
            margin-top: 10px;
            margin-left: 10px;
            font-family: Impact, Charcoal, sans-serif
        }

            .map-overlay .block-content .content-line {
                font-family: ""Trebuchet MS"", Helvetica, sans-serif
            }

    #features {
        top: 0px;
        height: 110px;
        margin-top: 10px;
        width: 250px;
    }



    .drop-placeholder {
        background-color: lightgray;
        height: 3.5em;
        padding-top: 12px;
        padding-bottom: 12px;
        line-height: 1.2em;
    }

    .mapboxgl-popup {
        max-width: 400px;
        font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
    }

    .color-box {
        width: 30px;
        height");
            WriteLiteral(@": 15px;
        display: inline-block;
        background-color: #ccc;
        position: relative;
        left: 5px;
        top: 5px;
    }

    .vidheader {
        position: relative;
        width: 100%;
        height: 300px;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

    video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        min-width: 100%;
        min-height: 100%;
        z-index: -1;
        object-position: center;
        object-fit: cover;
    }



    .culture-card {
        position: absolute;
        left: 0;
        top: 0;
        height: 700px;
        min-width: 500px;
        overflow-y: auto;
        overflow-x: hidden;
    }

        .culture-card .info-close {
            position: absolute;
            right: 0;
            top: 0;
            padding: 4px;
        }

        .culture-card .info-c");
            WriteLiteral(@"ontent {
            padding: 4px;
        }


    .info-card {
        position: absolute;
        left: 0;
        top: 0;
        height: 700px;
        min-width: 350px;
        overflow-y: auto;
        overflow-x: hidden;
    }

        .info-card .info-close {
            position: absolute;
            right: 0;
            top: 0;
            padding: 4px;
        }

        .info-card .info-content {
            padding: 4px;
        }

    .mapcontainer {
        position: relative;
    }

    #control-panel {
        display: none;
        width: 350px;
        padding: 8px 11px;
        padding-top: 35px;
        position: fixed;
        top: 0;
        left: 0;
        height: 100%;
        background-color: #ddd;
    }


    #control-panel-content {
        display: none;
    }

    #main-content {
        width: 100%;
        height: auto;
        display: block;
        overflow: hidden;
        position: relative;
        z-index: 2;
    ");
            WriteLiteral(@"}

    img {
        display: block;
        max-width: 350px;
        max-height: 200px;
        width: 100%;
        height: 100%;
    }

    #image-container {
        min-width: 340px;
        min-height: 200px;
    }

    #more-content {
        min-width: 348px;
        min-height: 286px;
    }

    .chartProgress {
        min-width: 100px;
        min-height: 100px;
    }


    .chartItem {
        max-height: 125px;
    }

    .irs--round .irs-from, .irs--round .irs-to, .irs--round .irs-single {
        background-color: #F2A02A !important
    }

    .irs--round .irs-bar {
        background-color: #F2A02A !important
    }

    .irs--round .irs-handle {
        border: 4px solid #F2A02A !important
    }

    #wrapper, img {
        width: 100%;
        height: 100%;
    }

    .axis {
        font: 14px sans-serif;
    }

    .color-panel {
        background-color: #ffee58;
        padding: 5px;
    }

    .panel-button {
        background-co");
            WriteLiteral("lor: #F0B20B !important;\r\n        color: #101010;\r\n        height: 70px;\r\n    }\r\n</style>\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n");
            EndContext();
            BeginContext(5267, 2765, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20e57012b39a4df698c6a1529b601b2c", async() => {
                BeginContext(5273, 2752, true);
                WriteLiteral(@"

    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">
    <meta name=""description"" content="""">
    <meta name=""author"" content="""">
    <title>RegionalVIC - Explore Regional Victoria</title>
    <!-- Fontawesome -->
    <link rel=""stylesheet"" href=""/fontawesome/css/font-awesome.min.css"">
    <!-- Bootstrap core CSS -->
    <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"" integrity=""sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"" crossorigin=""anonymous"">
    <!-- Custom fonts for this template -->
    <link href=""/vendor/fontawesome-free/css/all.min.css"" rel=""stylesheet"" type=""text/css"">
    <link href=""https://fonts.googleapis.com/css?family=Montserrat:400,700"" rel=""stylesheet"" type=""text/css"">
    <link href='https://fonts.googleapis.com/css?family=Kaushan+Script' rel='stylesheet' type='text/css'>

    <link href='https://api.tiles.mapbox.com/mapbox-g");
                WriteLiteral(@"l-js/v0.53.1/mapbox-gl.css' rel='stylesheet' />
    <link rel='/stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v3.1.6/mapbox-gl-geocoder.css' type='text/css' />

    <link href=""https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css"" rel=""stylesheet"">

    <!-- Bootstrap core JavaScript -->
    <script src=""/vendor/jquery/jquery.min.js""></script>
    <script src=""/vendor/bootstrap/js/bootstrap.bundle.min.js""></script>
    <!-- Plugin JavaScript -->
    <script src=""/vendor/jquery-easing/jquery.easing.min.js""></script>
    <script src=""https://unpkg.com/tinyqueue@2.0.0/tinyqueue.min.js""></script>
    <script src=""/js/polylabel.js""></script>

    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.js'></script>

    <script src=""https://cdn.jsdelivr.net/npm/chart.js@2.8.0""></script>

    <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v3.1.6/mapbox-gl-geocoder.min.js'></script>


    <script src=""https");
                WriteLiteral(@"://d3js.org/d3.v5.min.js""></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/d3-tip/0.7.1/d3-tip.min.js'></script>

    <script src=""/Scripts/ion.rangeSlider.min.js""></script>
    <script src=""/Scripts/covervid.min.js""></script>
    <script src=""https://api.tiles.mapbox.com/mapbox.js/plugins/turf/v2.0.0/turf.min.js""></script>


    <link href=""/css/rangeslider.css"" rel=""stylesheet"">
    <link rel=""stylesheet"" href=""/css/css-loader.css"">

    <link rel=""stylesheet"" href=""/css/ion.rangeSlider.min.css"">

    <!-- Custom styles for this template -->
    <link href=""/css/agency.min.css"" rel=""stylesheet"">
    <link rel=""stylesheet"" type=""text/css"" href=""/css/style.css"">
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8032, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(8034, 59475, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d0d25134ecc54f379b43ccde28ef81ce", async() => {
                BeginContext(8040, 8878, true);
                WriteLiteral(@"

    <nav class=""navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink"" id=""mainNav"">
        <div class=""container"">
            <a class=""navbar-brand js-scroll-trigger"" href=""/"">RegionalVIC</a>
            <button class=""navbar-toggler navbar-toggler-right"" type=""button"" data-toggle=""collapse"" data-target=""#navbarResponsive"" aria-controls=""navbarResponsive"" aria-expanded=""false"" aria-label=""Toggle navigation"">
                Menu
                <i class=""fas fa-bars""></i>
            </button>
            <div class=""collapse navbar-collapse"" id=""navbarResponsive"">
                <ul class=""navbar-nav ml-auto"" id=""myTab"">
                    <li class=""nav-item"">
                        <a class=""nav-link js-scroll-trigger"" href=""/"">Home</a>
                    </li>
                    <li class=""nav-item"">
                        <a class=""nav-link js-scroll-trigger"" href=""/Map/Recommendation"">Recommendation</a>
                    </li>

                    <li class=""nav-ite");
                WriteLiteral(@"m dropdown"">
                        <a class=""nav-link dropdown-toggle"" href=""/Map"" id=""navbarDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                            What you concern?
                        </a>
                        <div class=""dropdown-menu"" aria-labelledby=""navbarDropdown"">

                            <a class=""dropdown-item"" href=""/Map#description"">Regional areas information</a>
                            <div class=""dropdown-divider""></div>
                            <a class=""dropdown-item"" href=""/Map#job"">Job opportunity</a>
                            <a class=""dropdown-item"" href=""/Map#rent"">Rent cost</a>
                            <a class=""dropdown-item"" href=""/Map#safety"">Safety</a>
                            <a class=""dropdown-item"" href=""/Map#culture"">Loneliness</a>
                        </div>
                    </li>
                    <li class=""nav-item"">
                        <a class=""nav-link js-");
                WriteLiteral(@"scroll-trigger"" href=""/News"">News</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class=""loader loader-default is-active"" data-text id=""loader""></div>

    <section>
        <div class=""container"">
            <div class=""filter"" id=""selectAbleFilter"">
                <div class=""row"">
                    <div class=""col-12 col-sm-7 col-md-6"">
                        <div class=""dropdown mt-3 w-100"">
                            <button class=""button w-100 dropdown-toggle"" type=""button""
                                    id=""factorsDropdownMenu"" data-toggle=""dropdown"" aria-haspopup=""true""
                                    aria-expanded=""false"">
                                Importance of factors
                            </button>
                            <div class=""dropdown-menu importance-of-factors""
                                 aria-labelledby=""factorsDropdownMenu"">
                                <form class=""px");
                WriteLiteral(@"-4 py-3"">
                                    <div class=""form-group"">
                                        <label for=""acmSlider""
                                               class=""font--18 text--lebel"">Rent (a)</label>
                                        <div class=""range-slider"">
                                            <input type=""text"" class=""acmSlider"" value="""" />
                                        </div>
                                    </div>
                                    <div class=""form-group"">
                                        <label for=""amrSlider""
                                               class=""font--18 text--lebel"">Safety (b)</label>
                                        <div class=""range-slider"">
                                            <input type=""text"" class=""crmSlider"" value="""" />
                                        </div>
                                    </div>
                                    <div class=""form-group"">
 ");
                WriteLiteral(@"                                       <label for=""pouSlider""
                                               class=""font--18 text--lebel"">Population (c)</label>

                                        <div class=""range-slider"">
                                            <input type=""text"" class=""pouSlider"" value="""" />
                                        </div>
                                    </div>
                                    <div class=""form-group"">
                                        <label for=""culSlider""
                                               class=""font--18 text--lebel"">Culture Background (d)</label>
                                        <label for=""inputCountryR"" class=""font--18 text--lebel"">

                                        </label>
                                        <select id=""inputCountryR"" class=""form-control"">
                                            <option selected>Choose from List</option>
                                        </s");
                WriteLiteral(@"elect>
                                        <div class=""range-slider"">
                                            <input type=""text"" class=""culSlider"" value="""" />
                                        </div>
                                    </div>
                                    <div class=""form-group"">
                                        <label for=""jobSlider""
                                               class=""font--18 text--lebel"">Job Oportunity (e)</label>
                                        <label for=""inputIndustryR"" class=""font--18 text--lebel"">

                                        </label>
                                        <select id=""inputIndustryR"" class=""form-control"">
                                            <option selected>Choose from List</option>
                                        </select>
                                        <div class=""range-slider"">
                                            <input type=""text"" class=""jobSlider"" va");
                WriteLiteral(@"lue="""" />
                                        </div>
                                    </div>


                                    <p class=""text-sm-left"">
                                        Final Score = a * Rent score + b
                                        * Safety
                                        score + c *
                                        Population score + d *
                                        Culture score + e * Job score
                                    </p>
                                    <div class=""mt-3"">
                                        <span class=""font--18 font--bold hand text--colored float-right""
                                              id=""rmd-confirm"">Confirm</span>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class=""col-12 col-sm-5 col-md-4"">
                   ");
                WriteLiteral(@"     <div class=""dropdown mt-3 w-100"">
                            <button class=""button w-100 dropdown-toggle"" type=""button""
                                    id=""budgetDropdownMenu"" data-toggle=""dropdown"" aria-haspopup=""true""
                                    aria-expanded=""false"">
                                Rent Budget (per week)
                            </button>
                            <div class=""dropdown-menu importance-of-factors""
                                 aria-labelledby=""budgetDropdownMenu"">
                                <form class=""px-4 py-3"">
                                    <div class=""form-group"">
                                        <div class=""range-slider"">
                                            <input type=""text"" class=""recommendRanger"" value="""" />
                                        </div>
                                    </div>
                                    <div class=""mt-3"">
                                        <span clas");
                WriteLiteral(@"s=""font--18 font--bold hand text--colored float-right""
                                              id=""rmd-confirm2"">Confirm</span>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""container row"">
                <div class=""mapcontainer col-12"" id=""mapcontainer"">
                    <div id=""map"" class=""mmap"" style=""height:700px""></div>
                    <div class='map-overlay' id='features' style=""display: none""><div class='block-content' id='pd'><p></p></div></div>

");
                EndContext();
                BeginContext(21371, 19461, true);
                WriteLiteral(@"                    <div id=""culture-card"" class=""culture-card rounded shadow-lg bg-white"" style=""max-width: 500px; display: none;"">
                        <div class=""card"" id=""culture-card-content"" style=""display:block"">
                            <div width=""350"" height=""30"" id=""culture-info-content"">
                                <h2 class=""font--20 text--lebel font--bold p-4"" id=""culture-title""></h2>
                                <span class=""info-close"">
                                    <i id=""culture-card-close-button"" class=""fa fa-times"" role=""button"" aria-hidden=""true""></i>
                                </span>
                            </div>
                            <hr>
                            <div id=""culture-list-content"">
                            </div>
                        </div>

                    </div>

                    <div id=""info-card"" class=""info-card rounded shadow-lg bg-white"" style=""max-width: 350px; display: none;"">
                   ");
                WriteLiteral(@"     <div class=""card"" id=""card-content-2"" style=""display:none"">
                            <div width=""350"" height=""30"" id=""info-content-2"">
                                <h2 class=""font--20 text--lebel font--bold p-4"" id=""list-name""></h2>
                                <span class=""info-close"">
                                    <i id=""info-card-close-button-2"" class=""fa fa-times"" role=""button"" aria-hidden=""true""></i>
                                </span>
                            </div>
                            <div id='list' class=""list-group"">

                            </div>


                            <div id='slist' class=""list-group"">

                            </div>

                            <div id='recomd-list' class=""list-group"">

                            </div>
                        </div>

                        <div class=""card"" id=""card-content"">
                            <div width=""350"" height=""200"" id=""image-container"">
                ");
                WriteLiteral(@"                <span class=""info-close"">
                                    <i id=""info-card-close-button"" class=""fa fa-times"" role=""button"" aria-hidden=""true""></i>
                                </span>
                                <img class="""" width=""348"" height=""200"" id=""card-image"" src="""" />
                            </div>
                            <div class=""px-2 pb-2"" id=""more-content"">
                                <div class=""row"">
                                    <div class=""col-12"">
                                        <h2 class=""font--20 text--lebel font--bold mt-4"" id=""card-title""></h2>
                                        <p class=""font--18 subtitle--color mt-1"" id=""card-subtitle"">

                                        </p>
                                        <hr>
                                        <p class=""font--18 subtitle--color"" id=""card-description"">

                                        </p>
                                        <hr>");
                WriteLiteral(@"
                                    </div>
                                </div>
                            </div>

                            <div width=""350"" height=""200"" id=""image-container"">
                                <iframe id=""card-video"" width=""349"" height=""200"" src=""""></iframe>
                            </div>
                        </div>
                    </div>

                    <div id='state-legend' class='legend' style=""display: none"">
                        <h4>Median Rent</h4>
                        <div><span style='background-color: #723122'></span>$550</div>
                        <div><span style='background-color: #8B4225'></span>$450</div>
                        <div><span style='background-color: #A25626'></span>$350</div>
                        <div><span style='background-color: #B86B25'></span>$300</div>
                        <div><span style='background-color: #CA8323'></span>$250</div>
                        <div><span style='background-c");
                WriteLiteral(@"olor: #E6B71E'></span>$200</div>
                        <div><span style='background-color: #EED322'></span>$150</div>
                        <div><span style='background-color: #F2F12D'></span>$0 - $50</div>
                        <div><span style='background-color: #ddd'></span>No data</div>
                    </div>

                    <div id='state-crime-legend' class='legend' style=""display: none"">
                        <h4>Criminal rate</h4>
                        <div><span style='background-color: #723122'></span>10%</div>
                        <div><span style='background-color: #8B4225'></span>8%</div>
                        <div><span style='background-color: #A25626'></span>7%</div>
                        <div><span style='background-color: #B86B25'></span>6%</div>
                        <div><span style='background-color: #CA8323'></span>5%</div>
                        <div><span style='background-color: #DA9C20'></span>4%</div>
                        <div><span styl");
                WriteLiteral(@"e='background-color: #E6B71E'></span>3%</div>
                        <div><span style='background-color: #EED322'></span>2%</div>
                        <div><span style='background-color: #F2F12D'></span>0% - 2%</div>
                        <div><span style='background-color: #ddd'></span>No data</div>
                    </div>

                    <div id='state-density-legend' class='legend' style=""display: none"">
                        <h4>Population density</h4>
                        <div><span style='background-color: #723122'></span>200</div>
                        <div><span style='background-color: #8B4225'></span>50</div>
                        <div><span style='background-color: #A25626'></span>20</div>
                        <div><span style='background-color: #B86B25'></span>8</div>
                        <div><span style='background-color: #CA8323'></span>5</div>
                        <div><span style='background-color: #E6B71E'></span>3</div>
                        <");
                WriteLiteral(@"div><span style='background-color: #EED322'></span>1</div>
                        <div><span style='background-color: #F2F12D'></span>0 - 1</div>
                        <div><span style='background-color: #ddd'></span>No data</div>
                    </div>

                    <div id='state-unemp-legend' class='legend' style=""display: none"">
                        <h4>Umployment rate</h4>
                        <div><span style='background-color: #723122'></span>8%</div>
                        <div><span style='background-color: #8B4225'></span>7%</div>
                        <div><span style='background-color: #A25626'></span>6%</div>
                        <div><span style='background-color: #B86B25'></span>5%</div>
                        <div><span style='background-color: #CA8323'></span>4%</div>
                        <div><span style='background-color: #E6B71E'></span>3%</div>
                        <div><span style='background-color: #EED322'></span>2%</div>
                 ");
                WriteLiteral(@"       <div><span style='background-color: #F2F12D'></span>0% - 2%</div>
                        <div><span style='background-color: #ddd'></span>No data</div>
                    </div>

                    <div id='state-income-legend' class='legend' style=""display: none"">
                        <h4>Income</h4>
                        <div><span style='background-color: #723122'></span>$60,000</div>
                        <div><span style='background-color: #8B4225'></span>$55,000</div>
                        <div><span style='background-color: #A25626'></span>$50,000</div>
                        <div><span style='background-color: #B86B25'></span>$48,000</div>
                        <div><span style='background-color: #CA8323'></span>$44,000</div>
                        <div><span style='background-color: #E6B71E'></span>$40,000</div>
                        <div><span style='background-color: #EED322'></span>$35,000</div>
                        <div><span style='background-color: #F2F1");
                WriteLiteral(@"2D'></span>$0 - $35,000</div>
                        <div><span style='background-color: #ddd'></span>No data</div>
                    </div>
                </div>

                <div class=""col-6"" style=""display:none"" id=""chart-section"">

                    <div class=""d-flex justify-content-center"" id=""buttons"">
                        <button id=""byKey"" class=""btn btn-info"">Top 10 Min</button>
                        <button id=""byValue"" class=""btn btn-info""> Top 10 Max</button>
                    </div>
                    <br>
                    <div id=""barchart""></div>
                </div>
            </div>

        </div>

    </section>
    <script type=""text/javascript"" src=""/lga48.js.gz""></script>
    <script>
        var lga
        var lines;
        var toggleRecomd = false;

        var selected = """";
        var allCode = [20110, 20260, 20570, 20660, 20740, 20830, 20910, 21010, 21110, 21180, 21270, 21370, 21450, 21610, 21670, 21750, 21830, 21890, 22110, 221");
                WriteLiteral(@"70, 22250, 22310, 22410, 22490, 22620, 22670, 22750, 22830, 22910, 22980, 23110, 23190, 23270, 23350, 23430, 23670, 23810, 23940, 24130, 24210, 24250, 24330, 24410, 24600, 24650, 24780, 24850, 24900, 24970, 25060, 25150, 25250, 25340, 25430, 25490, 25620, 25710, 25810, 25900, 25990, 26080, 26170, 26260, 26350, 26430, 26490, 26610, 26670, 26700, 26730, 26810, 26890, 26980, 27070, 27170, 27260, 27350, 27450, 27630, 29399, 29499, 29799];

        const TOKEN = ""pk.eyJ1Ijoia2FzYWx1b3FpIiwiYSI6ImNqbHZ2OW53bTB5aHozcW9kcDJibndycXUifQ.SeWM7HbI0owT-Rwuv14Ntg"";

        mapboxgl.accessToken = TOKEN;
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/light-v9',
            //style: 'mapbox://styles/mapbox/light-v9',
            center: [145.045837, -37.876823],
            zoom: 6
        });


        var nav = new mapboxgl.NavigationControl();
        map.addControl(nav, 'bottom-right');

        var hoveredStateId = null;
        var highlig");
                WriteLiteral(@"htedStateId = null;

        var minFBudget;
        var maxFBudget;
        var minRBudget;
        var maxRBudget;

        $('#rmd-confirm').on('click', function () {
            $(this).parents('.dropdown').find('button.dropdown-toggle').dropdown('toggle')
            recommendation();
        });
        $('#rmd-confirm2').on('click', function () {
            $(this).parents('.dropdown').find('button.dropdown-toggle').dropdown('toggle')
            recommendation();
        });


        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }

    var myData;
    var rcMap;
    var cheo = new Object;
    var textColor = new Object;
    var crimeCheo = new Object;
    var desyCheo = new Object;
    var initCodeColor = false;
    var initMap = false;
        function for");
                WriteLiteral(@"mRegionColorMap() {
            rcMap = new Map();
            rcMap.set('20110', getRandomColor());
            rcMap.set('20260', getRandomColor());
            rcMap.set('20570', getRandomColor());
            rcMap.set('20660', getRandomColor());
            rcMap.set('20740', getRandomColor());
            rcMap.set('20830', getRandomColor());
            rcMap.set('20910', getRandomColor());
            rcMap.set('21010', getRandomColor());
            rcMap.set('21110', getRandomColor());
            rcMap.set('21180', getRandomColor());
            rcMap.set('21270', getRandomColor());
            rcMap.set('21370', getRandomColor());
            rcMap.set('21450', getRandomColor());
            rcMap.set('21610', getRandomColor());
            rcMap.set('21670', getRandomColor());
            rcMap.set('21750', getRandomColor());
            rcMap.set('21830', getRandomColor());
            rcMap.set('21890', getRandomColor());
            rcMap.set('22110', getRandomColor());
  ");
                WriteLiteral(@"          rcMap.set('22170', getRandomColor());
            rcMap.set('22250', getRandomColor());
            rcMap.set('22310', getRandomColor());
            rcMap.set('22410', getRandomColor());
            rcMap.set('22490', getRandomColor());
            rcMap.set('22620', getRandomColor());
            rcMap.set('22670', getRandomColor());
            rcMap.set('22750', getRandomColor());
            rcMap.set('22830', getRandomColor());
            rcMap.set('22910', getRandomColor());
            rcMap.set('22980', getRandomColor());
            rcMap.set('23110', getRandomColor());
            rcMap.set('23190', getRandomColor());
            rcMap.set('23270', getRandomColor());
            rcMap.set('23350', getRandomColor());
            rcMap.set('23430', getRandomColor());
            rcMap.set('23670', getRandomColor());
            rcMap.set('23810', getRandomColor());
            rcMap.set('23940', getRandomColor());
            rcMap.set('24130', getRandomColor());
      ");
                WriteLiteral(@"      rcMap.set('24210', getRandomColor());
            rcMap.set('24250', getRandomColor());
            rcMap.set('24330', getRandomColor());
            rcMap.set('24410', getRandomColor());
            rcMap.set('24600', getRandomColor());
            rcMap.set('24650', getRandomColor());
            rcMap.set('24780', getRandomColor());
            rcMap.set('24850', getRandomColor());
            rcMap.set('24900', getRandomColor());
            rcMap.set('24970', getRandomColor());
            rcMap.set('25060', getRandomColor());
            rcMap.set('25150', getRandomColor());
            rcMap.set('25250', getRandomColor());
            rcMap.set('25340', getRandomColor());
            rcMap.set('25430', getRandomColor());
            rcMap.set('25490', getRandomColor());
            rcMap.set('25620', getRandomColor());
            rcMap.set('25710', getRandomColor());
            rcMap.set('25810', getRandomColor());
            rcMap.set('25900', getRandomColor());
          ");
                WriteLiteral(@"  rcMap.set('25990', getRandomColor());
            rcMap.set('26080', getRandomColor());
            rcMap.set('26170', getRandomColor());
            rcMap.set('26260', getRandomColor());
            rcMap.set('26350', getRandomColor());
            rcMap.set('26430', getRandomColor());
            rcMap.set('26490', getRandomColor());
            rcMap.set('26610', getRandomColor());
            rcMap.set('26670', getRandomColor());
            rcMap.set('26700', getRandomColor());
            rcMap.set('26730', getRandomColor());
            rcMap.set('26810', getRandomColor());
            rcMap.set('26890', getRandomColor());
            rcMap.set('26980', getRandomColor());
            rcMap.set('27070', getRandomColor());
            rcMap.set('27170', getRandomColor());
            rcMap.set('27260', getRandomColor());
            rcMap.set('27350', getRandomColor());
            rcMap.set('27450', getRandomColor());
            rcMap.set('27630', getRandomColor());
            rc");
                WriteLiteral(@"Map.set('29399', getRandomColor());
            rcMap.set('29499', getRandomColor());
            rcMap.set('29799', getRandomColor());

            initialiseColor();
        }

        function initialiseColor() {
            myData = {
                ""20110"": rcMap.get('20110'),
                ""20260"": rcMap.get('20260'),
                ""20570"": rcMap.get('20570'),
                ""20660"": rcMap.get('20660'),
                ""20740"": rcMap.get('20740'),
                ""20830"": rcMap.get('20830'),
                ""20910"": rcMap.get('20910'),
                ""21010"": rcMap.get('21010'),
                ""21110"": rcMap.get('21110'),
                ""21180"": rcMap.get('21180'),
                ""21270"": rcMap.get('21270'),
                ""21370"": rcMap.get('21370'),
                ""21450"": rcMap.get('21450'),
                ""21610"": rcMap.get('21610'),
                ""21670"": rcMap.get('21670'),
                ""21750"": rcMap.get('21750'),
                ""21830"": rcMap.get('2183");
                WriteLiteral(@"0'),
                ""21890"": rcMap.get('21890'),
                ""22110"": rcMap.get('22110'),
                ""22170"": rcMap.get('22170'),
                ""22250"": rcMap.get('22250'),
                ""22310"": rcMap.get('22310'),
                ""22410"": rcMap.get('22410'),
                ""22490"": rcMap.get('22490'),
                ""22620"": rcMap.get('22620'),
                ""22670"": rcMap.get('22670'),
                ""22750"": rcMap.get('22750'),
                ""22830"": rcMap.get('22830'),
                ""22910"": rcMap.get('22910'),
                ""22980"": rcMap.get('22980'),
                ""23110"": rcMap.get('23110'),
                ""23190"": rcMap.get('23190'),
                ""23270"": rcMap.get('23270'),
                ""23350"": rcMap.get('23350'),
                ""23430"": rcMap.get('23430'),
                ""23670"": rcMap.get('23670'),
                ""23810"": rcMap.get('23810'),
                ""23940"": rcMap.get('23940'),
                ""24130"": rcMap.get('24130'),
      ");
                WriteLiteral(@"          ""24210"": rcMap.get('24210'),
                ""24250"": rcMap.get('24250'),
                ""24330"": rcMap.get('24330'),
                ""24410"": rcMap.get('24410'),
                ""24600"": rcMap.get('24600'),
                ""24650"": rcMap.get('24650'),
                ""24780"": rcMap.get('24780'),
                ""24850"": rcMap.get('24850'),
                ""24900"": rcMap.get('24900'),
                ""24970"": rcMap.get('24970'),
                ""25060"": rcMap.get('25060'),
                ""25150"": rcMap.get('25150'),
                ""25250"": rcMap.get('25250'),
                ""25340"": rcMap.get('25340'),
                ""25430"": rcMap.get('25430'),
                ""25490"": rcMap.get('25490'),
                ""25620"": rcMap.get('25620'),
                ""25710"": rcMap.get('25710'),
                ""25810"": rcMap.get('25810'),
                ""25900"": rcMap.get('25900'),
                ""25990"": rcMap.get('25990'),
                ""26080"": rcMap.get('26080'),
                ""2");
                WriteLiteral(@"6170"": rcMap.get('26170'),
                ""26260"": rcMap.get('26260'),
                ""26350"": rcMap.get('26350'),
                ""26430"": rcMap.get('26430'),
                ""26490"": rcMap.get('26490'),
                ""26610"": rcMap.get('26610'),
                ""26670"": rcMap.get('26670'),
                ""26700"": rcMap.get('26700'),
                ""26730"": rcMap.get('26730'),
                ""26810"": rcMap.get('26810'),
                ""26890"": rcMap.get('26890'),
                ""26980"": rcMap.get('26980'),
                ""27070"": rcMap.get('27070'),
                ""27170"": rcMap.get('27170'),
                ""27260"": rcMap.get('27260'),
                ""27350"": rcMap.get('27350'),
                ""27450"": rcMap.get('27450'),
                ""27630"": rcMap.get('27630'),
                ""29399"": rcMap.get('29399'),
                ""29499"": rcMap.get('29499'),
                ""29799"": rcMap.get('29799')
            };
            $.ajax({
                /**/
                u");
                WriteLiteral("rl: \'");
                EndContext();
                BeginContext(40833, 34, false);
#line 915 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
                 Write(Url.Action("setCodeColors", "Map"));

#line default
#line hidden
                EndContext();
                BeginContext(40867, 1588, true);
                WriteLiteral(@"',
                /**/
                type: 'POST',
                data: { json: JSON.stringify(myData) },
                success: function (data) {
                    initCodeColor = true;
                    if (initCodeColor && initMap) {
                        //loader
                        $(""#loader"").removeClass(""is-active"");
                    }
                },
            });
        }

        function easing(t) {
            return t * (2 - t);
        }
        function shrinkMap() {
            if (!moved) {
                var deltaDistance = 300;
                map.panBy([-deltaDistance, 0], {
                    easing: easing
                });
            }
            moved = true;
        }


        function extendMap() {
            if (moved) {
                var deltaDistance = 300;
                map.panBy([deltaDistance, 0], {
                    easing: easing
                });
            }
            moved = false;
        }
");
                WriteLiteral(@"    function flytoPoly(LGA_Code, option=1) {

        var features = lga[""features""];
        //map.setFilter('state-fills', ['==', ['number', ['get', 'LGA_CODE18']], LGA_Code]);
        if (features) {
            if (features.length) {

                var feat;
                features.forEach(function (feature) {
                    if (parseInt(feature.properties.LGA_CODE18) === parseInt(LGA_Code)) {

                        feat = feature;
                        $.ajax({
                            /**/
                            url: '");
                EndContext();
                BeginContext(42456, 30, false);
#line 966 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
                             Write(Url.Action("getLngLat", "Map"));

#line default
#line hidden
                EndContext();
                BeginContext(42486, 10163, true);
                WriteLiteral(@"',
                            /**/
                            type: 'POST',
                            data: { code: LGA_Code },
                            success: function (data) {
                                var item = JSON.parse(data);
                                var lat = item[""latitude""]
                                var lng = item[""longitude""]
                                var p = [lng - (option == 1 ? 0.5 : 0) , lat]
                                map.flyTo({
                                    center: p,
                                    zoom: 8
                                });
                                //var deltaDistance = 300;
                            },
                        });

                        if (hoveredStateId) {
                            map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
                        }
                        hoveredStateId = feat.id;
                        map.setFeatur");
                WriteLiteral(@"eState({ source: 'states', id: hoveredStateId }, { hover: true });

                        //        feat = feature;
                        //        var coords = feature.geometry.coordinates;
                        //        p = polylabel(coords, 1.0);
                    }
                });

            }
        }

        }

        formRegionColorMap();
        var moved = false;
        //showChart();
        var clicked = """";
        var list = document.getElementById('list');
        var slist = document.getElementById('slist');
        var recomdList = document.getElementById('recomd-list');


    $(document).ready(function () {
        initialCountryListR();
        initialIndustryListR();
        for (var i = 0; i < allCode.length; i++) {
            cheo[allCode[i]] = ""#ddd"";
            textColor[allCode[i]] = ""#333"";
        }


        //Reset as tab changed
        //$('a[data-toggle=""tab""]').on('shown.bs.tab', function (e) {
        //});

        //$(w");
                WriteLiteral(@"indow).scroll(function () {
        //    if ($(window).scrollTop <= 50) {
        //        $("".mmap"").css(""bottom"", 50 - $(window).scrollTop() ); //I want this value to change dynamically as the scrollbar moves down, so that the div stays on top of screen
        //    } else {
        //        $("".mmap"").css(""bottom"", 100 - $(window).scrollTop() );
        //    }
        //});

    });

    map.on('load', function () {
        // Add a layer showing the places.
        map.addSource(""states"", {
            ""type"": ""geojson"",
            ""data"": lga
        });
        //All colored states layer
        map.addLayer({
            ""id"": ""state-fills"",
            ""type"": ""fill"",
            ""source"": ""states"",
            ""layout"": { 'visibility': 'visible' },
            ""paint"": {
                ""fill-color"":
                    [""get"", [""to-string"", [""get"", ""LGA_CODE18""]], [""literal"", myData]],
                ""fill-opacity"": [""case"",
                    [""boolean"", [""feature-");
                WriteLiteral(@"state"", ""hover""], false],
                    0.9,
                    0.7
                ]
            }
        });

        //Generated layer
        map.addLayer({
            ""id"": ""cheo"",
            ""type"": ""fill"",
            ""source"": ""states"",
            ""layout"": { 'visibility': 'none' },
            ""paint"": {
                ""fill-color"":
                    [""get"", [""to-string"", [""get"", ""LGA_CODE18""]], [""literal"", cheo]],
                ""fill-opacity"": [""case"",
                    [""boolean"", [""feature-state"", ""hover""], false],
                    1,
                    0.7
                ]
            }
        });


        var featureCollection = {
            ""type"": ""FeatureCollection"",

            ""features"": [

            ]
        }
        lga.features.forEach(function (feature) {
            //draw.add(feature);
            if (feature.geometry != null) {

                var centroidPt = turf.center(feature);
                centroidPt.proper");
                WriteLiteral(@"ties.title = feature.properties.LGA_NAME18;
                centroidPt.properties.LGA_CODE18 = feature.properties.LGA_CODE18;
                featureCollection.features.push(centroidPt);
            }
        })

        map.addSource('label', {
            'type': 'geojson',
            'data': featureCollection
        });

        map.addLayer({
            ""id"": ""region-label"",
            ""type"": ""symbol"",
            ""source"": ""label"",
            ""layout"": {
                'text-field': '{title}',
                'text-font': [""Lato Bold""],
                'text-size': {
                    ""base"": 2,
                    ""stops"": [
                        [12, 12],
                        [16, 16]
                    ]
                },
                ""text-padding"": 3,
                ""text-letter-spacing"": 0.1,
                ""text-max-width"": 7
            },
            ""paint"": {
                ""text-color"":
                    [""get"", [""to-string"", [""get"", ""LGA");
                WriteLiteral(@"_CODE18""]], [""literal"", textColor]],
                ""text-halo-color"": ""hsl(0, 0%, 100%)"",
                ""text-halo-width"": 1.5,
                ""text-halo-blur"": 1
            }
        });
        //var popup = new mapboxgl.Popup({
        //    closeButton: false,
        //    closeOnClick: false
        //});

        // When the user moves their mouse over the state-fill layer, we'll update the
        // feature state for the feature under the mouse.
        map.on(""mousemove"", ""state-fills"", function (e) {
            map.getCanvas().style.cursor = e.point.length ? 'pointer' : '';

            if (e.features.length > 0) {
                if (hoveredStateId) {
                    map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
                }
                hoveredStateId = e.features[0].id;
                map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: true });
            }

            var coordinates = e.features");
                WriteLiteral(@"[0].geometry.coordinates.slice();
            var code = e.features[0].properties.LGA_CODE18;

            // Ensure that if the map is zoomed out such that multiple
            // copies of the feature are visible, the popup appears
            // over the copy being pointed to.
            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
            }

            // Populate the popup and set its coordinates
            // based on the feature found.
            //popup.setLngLat([e.lngLat.lng, e.lngLat.lat])
            //    .setHTML(code + ', ' + e.lngLat.lat + ', ' + e.lngLat.lng)
            //    .addTo(map);
        });

        // When the mouse leaves the state-fill layer, update the feature state of the
        // previously hovered feature.
        map.on(""mouseleave"", ""state-fills"", function (e) {

            //map.getCanvas().style.cursor = e.point.length ? 'default' : '';

            ");
                WriteLiteral(@"map.getCanvas().style.cursor = '';
            //popup.remove();

            if (hoveredStateId) {
                map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
            }
            hoveredStateId = null;
        });

        //Show information block and hover effect
        map.on('mousemove', ""cheo"", function (e) {
            var over = document.getElementById('features');
            if (showCheoBlock)
                features.style.display = ""block"";
            else
                features.style.display = ""none"";

            var states = map.queryRenderedFeatures(e.point);
            if (states.length > 0) {
                for (var i = 0; i < states.length; i++) {
                    if (states[0].layer.id == ""cheo"") {
                        var name = states[0].properties.LGA_NAME18.substring(0, states[0].properties.LGA_NAME18.indexOf("" (""));
                        document.getElementById('pd').innerHTML = '<h5><strong>' + name + '</s");
                WriteLiteral(@"trong></h5><div class=""content-line"">' + displayList[states[0].properties.LGA_CODE18] + '</div>';
                        break;
                    }
                }
            } else {
                document.getElementById('pd').innerHTML = '<p>Hover over a state!</p>';
            }

            if (e.features.length > 0) {
                if (hoveredStateId) {
                    map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
                }
                hoveredStateId = e.features[0].id;
                map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: true });
            }
        });

        //Reset information block and hover effect
        map.on('mouseleave', ""cheo"", function (e) {
            var over = document.getElementById('features');
            features.style.display = ""none""

            if (hoveredStateId) {
                map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false }");
                WriteLiteral(@");
            }
            hoveredStateId = null;
        });
        //Popup regions name
        map.on('click', 'state-fills', function (e) {

            var lgaCode = e.features[0].properties.LGA_CODE18;
            if (clicked == lgaCode)
                return;
            clicked = lgaCode;


            var content2 = document.querySelector('#card-content-2');
            content2.style.display = ""none"";
            var content1 = document.querySelector('#card-content');
            content1.style.display = ""block"";

            var content = document.querySelector('#more-content');

            content.style.display = ""none"";
            var image = document.querySelector('#card-image');
            image.style.display = ""none"";
            var video = document.querySelector('#card-video');
            video.style.display = ""none"";
            $.ajax({
                /**/
                url: '");
                EndContext();
                BeginContext(52650, 28, false);
#line 1235 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
                 Write(Url.Action("getInfo", "Map"));

#line default
#line hidden
                EndContext();
                BeginContext(52678, 9067, true);
                WriteLiteral(@"',
                /**/
                type: 'POST',
                data: { code: lgaCode },
                success: function (data) {
                    var item = JSON.parse(data);
                    var description = item[""descrption""];
                    var image_link = item[""image""];
                    var video_link = item[""video""];
                    var name = item[""name""];
                    var region = item[""region""];

                    // Display airport info
                    document.querySelector('#card-title').innerText = name;
                    document.querySelector('#card-subtitle').innerText = region;

                    document.querySelector('#card-description').innerText = description;

                    image.src = image_link;
                    video.src = video_link;

                    $('#more-content').fadeIn(200);
                    function iloaded() {
                        //image.style.display = ""block"";
                        $");
                WriteLiteral(@"('#card-image').fadeIn(200);
                    }

                    function vloaded() {
                        //video.style.display = ""block"";
                        $('#card-video').fadeIn(200);
                    }

                    if (image.complete) {
                        iloaded()
                    } else {
                        image.addEventListener('load', iloaded)
                    }

                    if (video.complete) {
                        vloaded()
                    } else {
                        video.addEventListener('load', vloaded)
                    }

                    if ($('#info-card').filter(':visible').length == 0) // all hidden
                    {
                        shrinkMap();
                        $('#info-card').fadeIn(300);
                        $('#culture-card').fadeOut(300);
                    }


                    // Ensure the info box is visible
                    document.querySelector('#info-c");
                WriteLiteral(@"ard').style.display = 'block';

                },
            });
        });

        map.on('idle', function () {
            initMap = true;
            if (initCodeColor && initMap) {
                //Loader
                $(""#loader"").removeClass(""is-active"");

            }
        });


        });

        function resetAll() {
            extendMap();
            $('#info-card').fadeOut(300);
            $('#culture-card').fadeOut(300);

            $(""#mapcontainer"").removeClass('col-6').addClass('col-12');
            $('#chart-section').hide();

            map.resize();
            showCheoBlock = false;
            resetLayer();
            selected = """";
            clicked = """";
            list.innerHTML = slist.innerHTML = recomdList.innerHTML = """";
        }

        document.querySelector('#info-card-close-button').addEventListener('click', function (event) {
            //document.querySelector('#info-card').style.display = 'none';

            //$(");
                WriteLiteral(@"'#info-card').fadeOut(300);
            resetAll();
        });

        document.querySelector('#culture-card-close-button').addEventListener('click', function (event) {
            //document.querySelector('#info-card').style.display = 'none';

            //$('#info-card').fadeOut(300);
            resetAll();
        });

        document.querySelector('#info-card-close-button-2').addEventListener('click', function (event) {
            //document.querySelector('#info-card').style.display = 'none';

            resetAll();
            //$('#info-card').fadeOut(300);
        });
        //Reset Layers
        function resetLayer() {

            for (var i = 0; i < allCode.length; i++) {
                cheo[allCode[i]] = ""#ddd"";
                textColor[allCode[i]] = ""#333"";
            }

            map.setPaintProperty(""region-label"", 'text-color', [""get"", [""to-string"", [""get"", ""LGA_CODE18""]], [""literal"", textColor]]);

            map.setLayoutProperty(""state-fills"", 'visib");
                WriteLiteral(@"ility', 'visible');
            map.setLayoutProperty(""cheo"", 'visibility', 'none');
            


        }
        var displayList = new Object


        var acmWeight;
        var crmWeight;
        var pouWeight;
        var culWeight;
        var jobWeight;

        var $acmrange = $("".acmSlider""),
            instance,
            min = 1,
            max = 5

        $acmrange.ionRangeSlider({
            skin: ""round"",
            type: ""single"",
            min: min,
            max: max,
            from: 2,
            values: [
                ""Not important"", ""Less important"", ""Average"", ""Important"", ""Very Important""
            ],
            onStart: updateA,
            onFinish: updateA
        });
        instance = $acmrange.data(""ionRangeSlider"");

        function updateA(data) {
            acmWeight = data.from;
            if (toggleRecomd) {
                //acmslider.disabled = true;
                recommendation();
            }
        }
");
                WriteLiteral(@"

        var $crmrange = $("".crmSlider""),
            instance,
            min = 1,
            max = 5

        $crmrange.ionRangeSlider({
            skin: ""round"",
            type: ""single"",
            min: min,
            max: max,
            from: 2,
            values: [
                ""Not important"", ""Less important"", ""Average"", ""Important"", ""Very Important""
            ],
            onStart: updateC,
            onFinish: updateC
        });
        instance = $crmrange.data(""ionRangeSlider"");

        function updateC(data) {
            crmWeight = data.from;
            if (toggleRecomd) {
                //acmslider.disabled = true;
                recommendation();
            }
        }


        var $pourange = $("".pouSlider""),
            instance,
            min = 1,
            max = 5

        $pourange.ionRangeSlider({
            skin: ""round"",
            type: ""single"",
            min: min,
            max: max,
            from: 2,
 ");
                WriteLiteral(@"           values: [
                ""Not important"", ""Less important"", ""Average"", ""Important"", ""Very Important""
            ],
            onStart: updateP,
            onFinish: updateP
        });
        instance = $pourange.data(""ionRangeSlider"");

        function updateP(data) {
            pouWeight = data.from;
            if (toggleRecomd) {
                //acmslider.disabled = true;
                recommendation();
            }
        }

        var $culrange = $("".culSlider""),
            instance,
            min = 1,
            max = 5

        $culrange.ionRangeSlider({
            skin: ""round"",
            type: ""single"",
            min: min,
            max: max,
            from: 2,
            values: [
                ""Not important"", ""Less important"", ""Average"", ""Important"", ""Very Important""
            ],
            onStart: updateU,
            onFinish: updateU
        });
        instance = $culrange.data(""ionRangeSlider"");

        function");
                WriteLiteral(@" updateU(data) {
            culWeight = data.from;
            if (toggleRecomd) {
                //acmslider.disabled = true;
                recommendation();
            }
        }


        var $jobrange = $("".jobSlider""),
            instance,
            min = 1,
            max = 5

        $jobrange.ionRangeSlider({
            skin: ""round"",
            type: ""single"",
            min: min,
            max: max,
            from: 2,
            values: [
                ""Not important"", ""Less important"", ""Average"", ""Important"", ""Very Important""
            ],
            onStart: updateI,
            onFinish: updateI
        });
        instance = $jobrange.data(""ionRangeSlider"");

        function updateI(data) {
            jobWeight = data.from;
            if (toggleRecomd) {
                //acmslider.disabled = true;
                recommendation();
            }
        }



        var $rrange = $("".recommendRanger""),
            instance,
       ");
                WriteLiteral(@"     min = 100,
            max = 1100,
            from = 0,
            to = 0;

        $rrange.ionRangeSlider({
            skin: ""round"",
            type: ""double"",
            min: min,
            max: max,
            from: 100,
            to: 1100,
            prefix: ""$"",
            step: 10,
            grid: true,             // show/hide grid
            onStart: updateRecommendInputs,
            onChange: updateRecommendInputs
        });
        instance = $rrange.data(""ionRangeSlider"");


        function updateRecommendInputs(data) {
            from = data.from;
            to = data.to;
            minRBudget = from;
            maxRBudget = to;
        }

        
        function initialIndustryListR() {
            $(""#inputIndustryR"").empty();
             $.ajax({
            /**/
                url: '");
                EndContext();
                BeginContext(61746, 35, false);
#line 1542 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
                 Write(Url.Action("getAllIndustry", "Job"));

#line default
#line hidden
                EndContext();
                BeginContext(61781, 730, true);
                WriteLiteral(@"',
            /**/
            type: 'POST',
            data: { },
                 success: function (data) {
                     var list = JSON.parse(data);
                     for (var i = 0; i < list.length; i++){
                         var value = list[i];
                         var o = new Option(value, value);
                        /// jquerify the DOM object 'o' so we can use the html method
                         $(o).html(value);
                         $(""#inputIndustryR"").append(o);
            }
            },
            });
        }

        function initialCountryListR() {
            $(""#inputCountryR"").empty();
             $.ajax({
            /**/
            url: '");
                EndContext();
                BeginContext(62512, 34, false);
#line 1563 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
             Write(Url.Action("getAllCountry", "Map"));

#line default
#line hidden
                EndContext();
                BeginContext(62546, 1921, true);
                WriteLiteral(@"',
            /**/
            type: 'POST',
            data: { },
                 success: function (data) {
                     var list = JSON.parse(data);
                     for (var i = 0; i < list.length; i++){
                         var value = list[i];
                         var o = new Option(value, value);
                        /// jquerify the DOM object 'o' so we can use the html method
                         $(o).html(value);
                        $(""#inputCountryR"").append(o);
            }
            },
            });
        }
    //Recommendation

    function recommendation() {

        slist.style.display = ""none"";
        list.style.display = ""none"";
        recomdList.style.display = ""block"";
        
        //Loader
        $(""#loader"").addClass(""is-active"");
        recomdList.innerHTML = """";

        //var minBudget = parseInt(document.getElementById(""min-bgt-recom"").value);
        //var maxBudget = parseInt(document.getElementById(""max-");
                WriteLiteral(@"bgt-recom"").value);
        minRBudget = isNaN(minRBudget) ? 0 : minRBudget;
        maxRBudget = isNaN(maxRBudget) ? 1000 : maxRBudget;

        var calAcmWeight = acmWeight;
        var calCrmWeight = crmWeight;
        var calPouWeight = pouWeight;
        var calCulWeight = culWeight;
        var calJobWeight = jobWeight;
        var sum = calAcmWeight + calCrmWeight + calPouWeight + calCulWeight + calJobWeight;
        calAcmWeight /= sum
        calCrmWeight /= sum
        calPouWeight /= sum
        calCulWeight /= sum
        calJobWeight /= sum

        var country = $(""#inputCountryR"").val();

        var industry = $(""#inputIndustryR"").val();


        document.querySelector('#card-content').style.display = ""none"";
        document.querySelector('#list-name').innerHTML = ""Recommendation result"";

        $.ajax({
            /**/
            url: '");
                EndContext();
                BeginContext(64468, 38, false);
#line 1618 "C:\Users\kasal\source\repos\kasaluoqi\RegionalVIC\RegionalVIC\Views\Map\Recommendation.cshtml"
             Write(Url.Action("getRecommendation", "Map"));

#line default
#line hidden
                EndContext();
                BeginContext(64506, 2996, true);
                WriteLiteral(@"',
            /**/
            type: 'POST',
            data: { min: minRBudget, max: maxRBudget, acmWeight: calAcmWeight, crmWeight: calCrmWeight, pouWeight: calPouWeight, culWeight: calCulWeight, jobWeight: calJobWeight, country: country, industry: industry },
            success: function (data) {
                toggleRecomd = true;

                var result = JSON.parse(data);
                var areas = result[""areas""];
                for (var i = 0; i < allCode.length; i++) {
                    cheo[allCode[i]] = ""#ddd"";
                    displayList[allCode[i]] = """";
                    textColor[allCode[i]] = '#999';
                }
                for (var i = 0; i < areas.length; i++) {
                    var code = areas[i];
                    cheo[code] = myData[code];
                    textColor[code] = '#333';
                }

                if ($('#info-card').filter(':visible').length == 0) // all hidden
                {
                    shrinkMap();");
                WriteLiteral(@"
                    $('#info-card').fadeIn(300);
                    $('#culture-card').fadeOut(300);
                }
                $('#card-content-2').fadeIn(300);
                $('#card-content').fadeOut(200);
                recomdList.innerHTML = result[""display""];

                showCheoBlock = false;

                map.setPaintProperty(""region-label"", 'text-color', [""get"", [""to-string"", [""get"", ""LGA_CODE18""]], [""literal"", textColor]]);

                map.setPaintProperty(""cheo"", 'fill-color', [""get"", [""to-string"", [""get"", ""LGA_CODE18""]], [""literal"", cheo]]);
                map.setLayoutProperty(""state-fills"", 'visibility', 'none');
                map.setLayoutProperty(""cheo"", 'visibility', 'visible');

                //acmslider.disabled = false;
                //crmSlider.disabled = false;
                //pouSlider.disabled = false;

                //Loader
                $(""#loader"").removeClass(""is-active"");
            },
        });

    }

    var $");
                WriteLiteral(@"frange = $("".filterRanger""),
        instance,
        min = 100,
        max = 1100,
        from = 0,
        to = 0;

    $frange.ionRangeSlider({
        skin: ""round"",
        type: ""double"",
        min: min,
        max: max,
        from: 100,
        to: 1100,
        step: 10,            // default 1 (set step)
        prefix: ""$"",
        grid: true,             // show/hide grid
        onStart: updateFilterInputs,
        onChange: updateFilterInputs
    });
    instance = $frange.data(""ionRangeSlider"");

    function updateFilterInputs(data) {
        from = data.from;
        to = data.to;
        minFBudget = from;
        maxFBudget = to;
    }
    </script>

    <!-- Contact form JavaScript -->
    <script src=""/js/jqBootstrapValidation.js""></script>
    <script src=""/js/contact_me.js""></script>
    <!-- Custom scripts for this template -->
    <script src=""/js/agency.js""></script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(67509, 11, true);
            WriteLiteral("\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
