@model Assignment.Models.reservation

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()



    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <script src="~/Scripts/jquery-3.3.1.js"></script>
        @Scripts.Render("~/Scripts/jquery.validate.min.js")
        @Scripts.Render("~/Scripts/jquery.validate.unobtrusive.min.js")
        <script src="~/Scripts/moment.min.js"></script>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.css" />

        <script type="text/javascript">
        $(function () {
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, "DD/MM/YYYY HH:mm:ss", true).isValid();
            }
        });

        $(document).ready(function () {
            //$(".date-picker").datetimepicker({
            //}).on('dp.change', function (selected) {
            //    startDate = new Date(selected.date.valueOf());
            //    startDate.setDate(startDate.getDate(new Date(selected.date.valueOf())));
            //    $('.date-picker2').datetimepicker('minDate', moment(startDate));
            //});

            //$(".date-picker2").datetimepicker({
            //}).on('dp.change', function (selected) {
            //    FromEndDate = new Date(selected.date.valueOf());
            //    FromEndDate.setDate(FromEndDate.getDate(new Date(selected.date.valueOf())));
            //    $('.date-picker').datetimepicker('maxDate', moment(FromEndDate));
            //});

            $('.date-picker, .date-picker2').datetimepicker({
                useCurrent: false,
                minDate: moment(),
                format: 'DD/MM/YYYY HH:mm:ss'
            });
            $('.date-picker').datetimepicker().on('dp.change', function (e) {
                var incrementDay = moment(new Date(e.date));
                incrementDay.add(1, 'days');
                $('.date-picker2').data('DateTimePicker').minDate(incrementDay);
                $(this).data("DateTimePicker").hide();
            });

            $('.date-picker2').datetimepicker().on('dp.change', function (e) {
                var decrementDay = moment(new Date(e.date));
                decrementDay.subtract(1, 'days');
                $('.date-picker').data('DateTimePicker').maxDate(decrementDay);
                $(this).data("DateTimePicker").hide();
            });
        });
        </script>

        <div class="form-horizontal">
            <h4>reservation</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)

            <div class="form-group">
                @Html.LabelFor(model => model.location_id, "location_id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("location_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.location_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.user_id, "user_id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("user_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.user_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.startDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control date-picker" } })
                    @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.endDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.endDate, new { htmlAttributes = new { @class = "form-control date-picker2" } })
                    @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
