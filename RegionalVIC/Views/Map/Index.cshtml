@using RegionalVIC.Controllers;
@*@model Tuple<Rtrtbl, Critbl, Ppltbl>*@
@*@model IEnumerable<Rtrtbl>*@
<style>

    .legend {
        background-color: #fff;
        border-radius: 3px;
        bottom: 10px;
        box-shadow: 0 1px 2px rgba(0,0,0,0.10);
        font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
        padding: 10px;
        position: absolute;
        right: 30px;
        z-index: 1;
    }

        .legend h4 {
            margin: 0 0 10px;
        }

        .legend div span {
            border-radius: 50%;
            display: inline-block;
            height: 10px;
            margin-right: 5px;
            width: 10px;
        }


    /**
    * Set rules for how the map overlays
    * (information box and legend) will be displayed
    * on the page. */
    .map-overlay {
        position: absolute;
        bottom: 0;
        right: 0;
        background: rgba(255, 255, 255, 0.8);
        font-size: 20px;
        margin-right: 20px;
        font-family: Helvetica, sans-serif;
        overflow: hidden;
        border-radius: 3px;
    }

        .map-overlay .block-content {
            margin-top: 10px;
            margin-left: 10px;
            font-family: Impact, Charcoal, sans-serif
        }

            .map-overlay .block-content .content-line {
                font-family: "Trebuchet MS", Helvetica, sans-serif
            }

    #features {
        top: 0px;
        height: 110px;
        margin-top: 10px;
        width: 250px;
    }


    .i-am-centered {
        margin: auto;
        max-width: 300px;
    }

    .drop-placeholder {
        background-color: lightgray;
        height: 3.5em;
        padding-top: 12px;
        padding-bottom: 12px;
        line-height: 1.2em;
    }

    .mapboxgl-popup {
        max-width: 400px;
        font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
    }

    .color-box {
        width: 30px;
        height: 15px;
        display: inline-block;
        background-color: #ccc;
        position: relative;
        left: 5px;
        top: 5px;
    }

    .vidheader {
        position: relative;
        width: 100%;
        height: 300px;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

    video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        min-width: 100%;
        min-height: 100%;
        z-index: -1;
        object-position: center;
        object-fit: cover;
    }



    .culture-card {
        position: absolute;
        left: 0;
        top: 0;
        height: 700px;
        min-width: 500px;
        overflow-y: auto;
        overflow-x: hidden;
    }

        .culture-card .info-close {
            position: absolute;
            right: 0;
            top: 0;
            padding: 4px;
        }

        .culture-card .info-content {
            padding: 4px;
        }


    .info-card {
        position: absolute;
        left: 0;
        top: 0;
        height: 700px;
        min-width: 350px;
        overflow-y: auto;
        overflow-x: hidden;
    }

        .info-card .info-close {
            position: absolute;
            right: 0;
            top: 0;
            padding: 4px;
        }

        .info-card .info-content {
            padding: 4px;
        }

    .mapcontainer{
        position: relative;
    }
    #control-panel {
        display: none;
        width: 350px;
        padding: 8px 11px;
        padding-top: 35px;
        position: fixed;
        top: 0;
        left: 0;
        height: 100%;
        background-color: #ddd;
    }


    #control-panel-content {
        display: none;
    }

    #main-content {
        width: 100%;
        height: auto;
        display: block;
        overflow: hidden;
        position: relative;
        z-index: 2;
    }

    img {
        display: block;
        max-width: 350px;
        max-height: 200px;
        width: 100%;
        height: 100%;
    }

    #image-container {
        min-width: 340px;
        min-height: 200px;
    }
    
    #more-content {
        min-width: 348px;
        min-height: 286px;
    }
    .chartProgress {
        min-width: 100px;
        min-height: 100px;
    }


    .chartItem {
        max-height: 125px;
    }

    .irs--round .irs-from, .irs--round .irs-to, .irs--round .irs-single {
        background-color: #F2A02A !important
    }

    .irs--round .irs-bar {
        background-color: #F2A02A !important
    }
    .irs--round .irs-handle {
        border: 4px solid #F2A02A !important
    }

    #wrapper, img {
        width: 100%;
        height: 100%;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>RegionalVIC - Explore Regional Victoria</title>
    <!-- Fontawesome -->
    <link rel="stylesheet" href="/fontawesome/css/font-awesome.min.css">
    <!-- Bootstrap core CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <!-- Custom fonts for this template -->
    <link href="/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css">
    <link href='https://fonts.googleapis.com/css?family=Kaushan+Script' rel='stylesheet' type='text/css'>

    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.css' rel='stylesheet' />
    <link rel='/stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v3.1.6/mapbox-gl-geocoder.css' type='text/css' />

    <link href="https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css" rel="stylesheet">

    <!-- Bootstrap core JavaScript -->
    <script src="/vendor/jquery/jquery.min.js"></script>
    <script src="/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Plugin JavaScript -->
    <script src="/vendor/jquery-easing/jquery.easing.min.js"></script>
    <script src="https://unpkg.com/tinyqueue@2.0.0/tinyqueue.min.js"></script>
    <script src="/js/polylabel.js"></script>

    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.js'></script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

    <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v3.1.6/mapbox-gl-geocoder.min.js'></script>

    <script src="/Scripts/ion.rangeSlider.min.js"></script>
    <script src="/Scripts/covervid.min.js"></script>
    <script src="https://api.tiles.mapbox.com/mapbox.js/plugins/turf/v2.0.0/turf.min.js"></script>

    <link href="/css/rangeslider.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/css-loader.css">

    <link rel="stylesheet" href="/css/ion.rangeSlider.min.css">

    <!-- Custom styles for this template -->
    <link href="/css/agency.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/css/style.css">
</head>

<body>
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top" id="mainNav">
        <div class="container">
            <a class="navbar-brand js-scroll-trigger" href="/">RegionalVIC</a>
            <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                Menu
                <i class="fas fa-bars"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav text-uppercase ml-auto">
                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" href="/">Home</a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" href="/News">News</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <!-- Header -->
    <header class="masthead" style="background-image: url('/img/map1.jpg');background-size: cover;">
        <div class="container">
            <div class="intro-normal">

            </div>
        </div>
    </header>

    <div class="loader loader-default is-active" data-text id="loader"></div>

    <section>
        <div class="container">
            <div class="row">
                <div class="col">
                    <h2 class="section-header">Find out your place to live </h2>

                    <!-- Tab Section -->

                    <ul class="nav nav-tabs justify-content-center " id="mapTab" role="tablist">
                        <li class="nav-item" onclick="resetAll()">
                            <a class="nav-link pl-5 pr-5 active" id="description-tab" data-toggle="tab" href="#description"
                               role="tab" aria-controls="description" aria-selected="false">Regional Details</a>
                        </li>
                        <li class="nav-item" onclick="resetAll()">
                            <a class="nav-link pl-5 pr-5" id="living-tab" data-toggle="tab" href="#living"
                               role="tab" aria-controls="living" aria-selected="false">Rent</a>
                        </li>
                        <li class="nav-item" onclick="resetAll()">
                            <a class="nav-link pl-5 pr-5" id="safety-tab" data-toggle="tab" href="#safety"
                               role="tab" aria-controls="safety" aria-selected="false">Safety</a>
                        </li>
                        <li class="nav-item" onclick="resetAll()">
                            <a class="nav-link pl-5 pr-5" id="culture-tab" data-toggle="tab" href="#culture"
                               role="tab" aria-controls="culture" aria-selected="false">Cultural Background</a>
                        </li>
                        <li class="nav-item" onclick="resetAll()">
                            <a class="nav-link pl-5 pr-5" id="recommendation-tab" data-toggle="tab"
                               href="#recommendation" role="tab" aria-controls="recommendation"
                               aria-selected="true">Recommendation</a>
                        </li>
                    </ul>

                    <div class="tab-content">

                        <div class="tab-pane active" id="description" role="tabpanel"
                             aria-labelledby="description-tab">
                            <br>

                        </div>

                        <!-- Reccomendation Pane -->

                        <div class="tab-pane" id="recommendation" role="tabpanel"
                             aria-labelledby="recommendation-tab">

                            <div class="filter" id="selectAbleFilter">
                                <div class="row">
                                    <div class="col-12 col-sm-7 col-md-6">
                                        <div class="dropdown mt-3 w-100">
                                            <button class="button w-100 dropdown-toggle" type="button"
                                                    id="factorsDropdownMenu" data-toggle="dropdown" aria-haspopup="true"
                                                    aria-expanded="false">
                                                Importance of factors
                                            </button>
                                            <div class="dropdown-menu importance-of-factors"
                                                 aria-labelledby="factorsDropdownMenu">
                                                <form class="px-4 py-3">
                                                    <div class="form-group">
                                                        <label for="acmSlider"
                                                               class="font--18 text--lebel">Rent (a)</label>
                                                        <div class="range-slider">
                                                            <input type="text" class="acmSlider" value="" />
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label for="amrSlider"
                                                               class="font--18 text--lebel">Safety (b)</label>
                                                        <div class="range-slider">
                                                            <input type="text" class="crmSlider" value="" />
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label for="pouSlider"
                                                               class="font--18 text--lebel">Population (c)</label>

                                                        <div class="range-slider">
                                                            <input type="text" class="pouSlider" value="" />
                                                        </div>
                                                    </div>
                                                    <p class="text-sm-left">
                                                        Final Score = a * Rent score + b
                                                        * Safety
                                                        score + c *
                                                        Population score
                                                    </p>
                                                    <div class="mt-3">
                                                        <span class="font--18 font--bold hand text--colored float-right"
                                                              onclick="recommendation()">Confirm</span>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12 col-sm-5 col-md-4">
                                        <div class="dropdown mt-3 w-100">
                                            <button class="button w-100 dropdown-toggle" type="button"
                                                    id="budgetDropdownMenu" data-toggle="dropdown" aria-haspopup="true"
                                                    aria-expanded="false">
                                                Budget (per week)
                                            </button>
                                            <div class="dropdown-menu importance-of-factors"
                                                 aria-labelledby="budgetDropdownMenu">
                                                <form class="px-4 py-3">
                                                    <div class="form-group">
                                                        <div class="range-slider">
                                                            <input type="text" class="recommendRanger" value="" />
                                                        </div>
                                                    </div>
                                                    <div class="mt-3">
                                                        <span class="font--18 font--bold hand text--colored float-right"
                                                              onclick="recommendation()">Confirm</span>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                        <!-- Living Pane -->
                        <div class="tab-pane" id="living" role="tabpanel" aria-labelledby="living-tab">
                            <div class="filter">
                                <div class="row">
                                    <div class="col-12 col-md-7 col-lg-4">
                                        <div class="dropdown mt-3 w-100">
                                            <button class="button w-100 dropdown-toggle" type="button"
                                                    id="budgetDropdownMenu" data-toggle="dropdown" aria-haspopup="true"
                                                    aria-expanded="false">
                                                Rent (per week)
                                            </button>
                                            <div class="dropdown-menu importance-of-factors"
                                                 aria-labelledby="budgetDropdownMenu">
                                                <form class="px-4 py-3">

                                                    <div class="form-group row">
                                                        <div class="col-md-6">
                                                            <label for="sel2">Type:</label>
                                                        </div>

                                                        <div class="col-md-6">
                                                            <select class="form-control" id="sel2" onchange="changeSelect()">
                                                                <option>Flat</option>
                                                                <option>House</option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="form-group row">
                                                        <div class="col-md-6">
                                                            <label for="sel1">Num of bedroom:</label>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <select class="form-control" id="sel1">
                                                                <option>1</option>
                                                                <option>2</option>
                                                                <option>3</option>
                                                                <option disabled>4</option>
                                                            </select>
                                                        </div>
                                                    </div>

                                                    <div class="mt-3">
                                                        <span class="font--18 font--bold hand text--colored float-right"
                                                              onclick="choropleth('a')">Confirm</span>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12 col-md-7 col-lg-4">
                                        <div class="dropdown mt-3 w-100">
                                            <button class="button w-100 dropdown-toggle" type="button"
                                                    id="budgetDropdownMenu" data-toggle="dropdown" aria-haspopup="true"
                                                    aria-expanded="false">
                                                Your Budget (per week)
                                            </button>
                                            <div class="dropdown-menu importance-of-factors"
                                                 aria-labelledby="budgetDropdownMenu">
                                                <form class="px-4 py-3">
                                                    <div class="form-group">
                                                        <div class="range-slider">
                                                            <input type="text" class="filterRanger" value="" />
                                                        </div>
                                                    </div>
                                                    <div class="mt-3">
                                                        <span class="font--18 font--bold hand text--colored float-right"
                                                              onclick="filter()">Confirm</span>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Safety Pane -->

                        <div class="tab-pane" id="safety" role="tabpanel" aria-labelledby="safety-tab">
                            <div class="filter">
                                <div class="row">
                                    <div class="col-12 col-md-6 col-lg-4">
                                        <button class="button w-100 mt-3" onclick="choropleth('c')">Criminal Rate</button>
                                    </div>
                                    <div class="col-12 col-md-6 col-lg-4">
                                        <button class="button w-100 mt-3" onclick="choropleth('d')">Population Density</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Cultural Pane -->

                        <div class="tab-pane" id="culture" role="tabpanel" aria-labelledby="culture-tab">
                            <div class="filter">
                                <div class="row">
                                    <div class="col-12 col-md-12 col-lg-5">
                                        <div class="dropdown mt-3 w-100">
                                            <button class="button w-100 dropdown-toggle" type="button"
                                                    id="budgetDropdownMenu" data-toggle="dropdown" aria-haspopup="true"
                                                    aria-expanded="false">
                                                Country & Language of Region
                                            </button>
                                            <div class="dropdown-menu importance-of-factors"
                                                 aria-labelledby="budgetDropdownMenu">
                                                <form class="px-4 py-3">
                                                    <label for="inputRegion" class="font--18 text--lebel">
                                                        Select region
                                                    </label>
                                                    <select id="inputRegion" class="form-control">
                                                        <option selected>Choose from List</option>
                                                    </select>
                                                    <div class="mt-3">
                                                        <span class="font--18 font--bold hand text--colored" onclick="show('countrywithpopulation')">Birth Country</span>&nbsp;&nbsp;
                                                        <span class="font--18 font--bold hand text--colored float-right" onclick="show('languagewithpopulation')">Language Use</span>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-12 col-md-6 col-lg-3">
                                        <div class="dropdown mt-3 w-100">
                                            <button class="button w-100 dropdown-toggle" type="button"
                                                    id="budgetDropdownMenu" data-toggle="dropdown" aria-haspopup="true"
                                                    aria-expanded="false">
                                                Your Country
                                            </button>
                                            <div class="dropdown-menu importance-of-factors"
                                                 aria-labelledby="budgetDropdownMenu">
                                                <form class="px-4 py-3">
                                                    <label for="inputCountry" class="font--18 text--lebel">
                                                        Select your
                                                        country
                                                    </label>
                                                    <select id="inputCountry" class="form-control">
                                                        <option selected>Choose from List</option>
                                                    </select>
                                                    <div class="mt-3">
                                                        <span class="font--18 font--bold hand text--colored float-right" onclick="show('autocountry')">Confirm</span>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="mapcontainer">
                        <div id="map" class="mmap" style="height:700px"></div>
                        <div class='map-overlay' id='features' style="display: none"><div class='block-content' id='pd'><p></p></div></div>


                        <div id="culture-card" class="culture-card rounded shadow-lg bg-white" style="max-width: 500px; display: none;">
                            <div class="card" id="culture-card-content" style="display:block">
                                <div width="350" height="30" id="culture-info-content">
                                    <h2 class="font--20 text--lebel font--bold p-4" id="culture-title"></h2>
                                    <span class="info-close">
                                        <i id="culture-card-close-button" class="fa fa-times" role="button" aria-hidden="true"></i>
                                    </span>
                                </div>
                                <hr>
                                <div id="culture-list-content">
                                </div>
                            </div>

                        </div>

                        <div id="info-card" class="info-card rounded shadow-lg bg-white" style="max-width: 350px; display: none;">
                            <div class="card" id="card-content-2" style="display:none">
                                <div width="350" height="30" id="info-content-2">
                                    <h2 class="font--20 text--lebel font--bold p-4" id="list-name"></h2>
                                    <span class="info-close">
                                        <i id="info-card-close-button-2" class="fa fa-times" role="button" aria-hidden="true"></i>
                                    </span>
                                </div>
                                <div id='list' class="list-group">

                                </div>


                                <div id='slist' class="list-group">

                                </div>

                                <div id='recomd-list' class="list-group">

                                </div>
                            </div>

                            <div class="card" id="card-content">
                                <div width="350" height="200" id="image-container">
                                    <span class="info-close">
                                        <i id="info-card-close-button" class="fa fa-times" role="button" aria-hidden="true"></i>
                                    </span>
                                    <img class="" width="348" height="200" id="card-image" src="http://via.placeholder.com/350x200?text=No+Picture+Found" />
                                </div>
                                <div class="px-2 pb-2" id="more-content">
                                    <div class="row">
                                        <div class="col-12">
                                            <h2 class="font--20 text--lebel font--bold mt-4" id="card-title"></h2>
                                            <p class="font--18 subtitle--color mt-1" id="card-subtitle">

                                            </p>
                                            <hr>
                                            <p class="font--18 subtitle--color" id="card-description">

                                            </p>
                                            <hr>
                                        </div>
                                    </div>
                                </div>

                                <div width="350" height="200" id="image-container">
                                    <iframe id="card-video" width="349" height="200" src=""></iframe>
                                </div>
                            </div>
                        </div>

                        <div id='state-legend' class='legend' style="display: none">
                            <h4>Median Rent</h4>
                            <div><span style='background-color: #723122'></span>550</div>
                            <div><span style='background-color: #8B4225'></span>450</div>
                            <div><span style='background-color: #A25626'></span>350</div>
                            <div><span style='background-color: #B86B25'></span>300</div>
                            <div><span style='background-color: #CA8323'></span>250</div>
                            <div><span style='background-color: #E6B71E'></span>200</div>
                            <div><span style='background-color: #EED322'></span>150</div>
                            <div><span style='background-color: #F2F12D'></span>50</div>
                            <div><span style='background-color: #ddd'></span>No data</div>
                        </div>

                        <div id='state-crime-legend' class='legend' style="display: none">
                            <h4>Criminal rate</h4>
                            <div><span style='background-color: #723122'></span>10%</div>
                            <div><span style='background-color: #8B4225'></span>8%</div>
                            <div><span style='background-color: #A25626'></span>7%</div>
                            <div><span style='background-color: #B86B25'></span>6%</div>
                            <div><span style='background-color: #CA8323'></span>5%</div>
                            <div><span style='background-color: #DA9C20'></span>4%</div>
                            <div><span style='background-color: #E6B71E'></span>3%</div>
                            <div><span style='background-color: #EED322'></span>2%</div>
                            <div><span style='background-color: #F2F12D'></span>1%</div>
                            <div><span style='background-color: #ddd'></span>No data</div>
                        </div>

                        <div id='state-density-legend' class='legend' style="display: none">
                            <h4>Population density</h4>
                            <div><span style='background-color: #723122'></span>200</div>
                            <div><span style='background-color: #8B4225'></span>50</div>
                            <div><span style='background-color: #A25626'></span>20</div>
                            <div><span style='background-color: #B86B25'></span>8</div>
                            <div><span style='background-color: #CA8323'></span>5</div>
                            <div><span style='background-color: #E6B71E'></span>3</div>
                            <div><span style='background-color: #EED322'></span>1</div>
                            <div><span style='background-color: #F2F12D'></span>0-1</div>
                            <div><span style='background-color: #ddd'></span>No data</div>
                        </div>
                    </div>


                </div>
            </div>
        </div>

    </section>

    <!-- Footer -->
    <footer>
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <span class="copyright">
                        Copyright &copy; RegionalVIC 2019. Theme is from <a href="https://startbootstrap.com/themes/">Start Bootstrap</a> website under MIT license.
                    </span>
                </div>
                @*<div class="col-md-4">
                        <ul class="list-inline social-buttons">
                            <li class="list-inline-item">
                                <a href="#">
                                    <i class="fab fa-twitter"></i>
                                </a>
                            </li>
                            <li class="list-inline-item">
                                <a href="#">
                                    <i class="fab fa-facebook-f"></i>
                                </a>
                            </li>
                            <li class="list-inline-item">
                                <a href="#">
                                    <i class="fab fa-linkedin-in"></i>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-md-4">
                        <ul class="list-inline quicklinks">
                            <li class="list-inline-item">
                                <a href="#">Privacy Policy</a>
                            </li>
                            <li class="list-inline-item">
                                <a href="#">Terms of Use</a>
                            </li>
                        </ul>
                    </div>*@
            </div>
        </div>
    </footer>
    <!-- Load the File-->>
    <script type="text/javascript" src="/lga48.js.gz"></script>
    <script>
    var lga
    var lines;
    var toggleRecomd = false;

        var selected = "";
    var allCode = [20110, 20260, 20570, 20660, 20740, 20830, 20910, 21010, 21110, 21180, 21270, 21370, 21450, 21610, 21670, 21750, 21830, 21890, 22110, 22170, 22250, 22310, 22410, 22490, 22620, 22670, 22750, 22830, 22910, 22980, 23110, 23190, 23270, 23350, 23430, 23670, 23810, 23940, 24130, 24210, 24250, 24330, 24410, 24600, 24650, 24780, 24850, 24900, 24970, 25060, 25150, 25250, 25340, 25430, 25490, 25620, 25710, 25810, 25900, 25990, 26080, 26170, 26260, 26350, 26430, 26490, 26610, 26670, 26700, 26730, 26810, 26890, 26980, 27070, 27170, 27260, 27350, 27450, 27630, 29399, 29499, 29799];

    const TOKEN = "pk.eyJ1Ijoia2FzYWx1b3FpIiwiYSI6ImNqbHZ2OW53bTB5aHozcW9kcDJibndycXUifQ.SeWM7HbI0owT-Rwuv14Ntg";

    mapboxgl.accessToken = TOKEN;
    var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/light-v9',
        //style: 'mapbox://styles/mapbox/light-v9',
        center: [145.045837, -37.876823],
        zoom: 6
    });
    
    
    var nav = new mapboxgl.NavigationControl();
    map.addControl(nav, 'bottom-right');

    var hoveredStateId = null;
    var highlightedStateId = null;
        
    var minFBudget;
    var maxFBudget;
    var minRBudget;
    var maxRBudget;


        function show(option) {
            $('#culture-list-content').empty();
            if (option === 'countrywithpopulation') {

                selected = $("#inputRegion").val();
                if (selected != "")
                    initCountryCharts(selected);

            }
            else if (option === 'languagewithpopulation') {

                selected = $("#inputRegion").val();
                if (selected != "")
                    initLanguageCharts(selected);
            }
            else if (option === 'autocountry') {

                var selectedCountry = $("#inputCountry").val();
                if (selectedCountry!="")
                    initRegionCharts(selectedCountry);
            }
        }
    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }
    var myData;
    var rcMap;
    var cheo = new Object;
    var textColor = new Object;
    var crimeCheo = new Object;
    var desyCheo = new Object;
    var initCodeColor = false;
    var initMap = false;
    function formRegionColorMap() {
        rcMap = new Map();
        rcMap.set('20110', getRandomColor());
        rcMap.set('20260', getRandomColor());
        rcMap.set('20570', getRandomColor());
        rcMap.set('20660', getRandomColor());
        rcMap.set('20740', getRandomColor());
        rcMap.set('20830', getRandomColor());
        rcMap.set('20910', getRandomColor());
        rcMap.set('21010', getRandomColor());
        rcMap.set('21110', getRandomColor());
        rcMap.set('21180', getRandomColor());
        rcMap.set('21270', getRandomColor());
        rcMap.set('21370', getRandomColor());
        rcMap.set('21450', getRandomColor());
        rcMap.set('21610', getRandomColor());
        rcMap.set('21670', getRandomColor());
        rcMap.set('21750', getRandomColor());
        rcMap.set('21830', getRandomColor());
        rcMap.set('21890', getRandomColor());
        rcMap.set('22110', getRandomColor());
        rcMap.set('22170', getRandomColor());
        rcMap.set('22250', getRandomColor());
        rcMap.set('22310', getRandomColor());
        rcMap.set('22410', getRandomColor());
        rcMap.set('22490', getRandomColor());
        rcMap.set('22620', getRandomColor());
        rcMap.set('22670', getRandomColor());
        rcMap.set('22750', getRandomColor());
        rcMap.set('22830', getRandomColor());
        rcMap.set('22910', getRandomColor());
        rcMap.set('22980', getRandomColor());
        rcMap.set('23110', getRandomColor());
        rcMap.set('23190', getRandomColor());
        rcMap.set('23270', getRandomColor());
        rcMap.set('23350', getRandomColor());
        rcMap.set('23430', getRandomColor());
        rcMap.set('23670', getRandomColor());
        rcMap.set('23810', getRandomColor());
        rcMap.set('23940', getRandomColor());
        rcMap.set('24130', getRandomColor());
        rcMap.set('24210', getRandomColor());
        rcMap.set('24250', getRandomColor());
        rcMap.set('24330', getRandomColor());
        rcMap.set('24410', getRandomColor());
        rcMap.set('24600', getRandomColor());
        rcMap.set('24650', getRandomColor());
        rcMap.set('24780', getRandomColor());
        rcMap.set('24850', getRandomColor());
        rcMap.set('24900', getRandomColor());
        rcMap.set('24970', getRandomColor());
        rcMap.set('25060', getRandomColor());
        rcMap.set('25150', getRandomColor());
        rcMap.set('25250', getRandomColor());
        rcMap.set('25340', getRandomColor());
        rcMap.set('25430', getRandomColor());
        rcMap.set('25490', getRandomColor());
        rcMap.set('25620', getRandomColor());
        rcMap.set('25710', getRandomColor());
        rcMap.set('25810', getRandomColor());
        rcMap.set('25900', getRandomColor());
        rcMap.set('25990', getRandomColor());
        rcMap.set('26080', getRandomColor());
        rcMap.set('26170', getRandomColor());
        rcMap.set('26260', getRandomColor());
        rcMap.set('26350', getRandomColor());
        rcMap.set('26430', getRandomColor());
        rcMap.set('26490', getRandomColor());
        rcMap.set('26610', getRandomColor());
        rcMap.set('26670', getRandomColor());
        rcMap.set('26700', getRandomColor());
        rcMap.set('26730', getRandomColor());
        rcMap.set('26810', getRandomColor());
        rcMap.set('26890', getRandomColor());
        rcMap.set('26980', getRandomColor());
        rcMap.set('27070', getRandomColor());
        rcMap.set('27170', getRandomColor());
        rcMap.set('27260', getRandomColor());
        rcMap.set('27350', getRandomColor());
        rcMap.set('27450', getRandomColor());
        rcMap.set('27630', getRandomColor());
        rcMap.set('29399', getRandomColor());
        rcMap.set('29499', getRandomColor());
        rcMap.set('29799', getRandomColor());

        initialiseColor();
    }

    function initialiseColor() {
        //var myData = { "VIC221": '#EED322', "VIC213": '#627BC1'};
        myData = {
            "20110": rcMap.get('20110'),
            "20260": rcMap.get('20260'),
            "20570": rcMap.get('20570'),
            "20660": rcMap.get('20660'),
            "20740": rcMap.get('20740'),
            "20830": rcMap.get('20830'),
            "20910": rcMap.get('20910'),
            "21010": rcMap.get('21010'),
            "21110": rcMap.get('21110'),
            "21180": rcMap.get('21180'),
            "21270": rcMap.get('21270'),
            "21370": rcMap.get('21370'),
            "21450": rcMap.get('21450'),
            "21610": rcMap.get('21610'),
            "21670": rcMap.get('21670'),
            "21750": rcMap.get('21750'),
            "21830": rcMap.get('21830'),
            "21890": rcMap.get('21890'),
            "22110": rcMap.get('22110'),
            "22170": rcMap.get('22170'),
            "22250": rcMap.get('22250'),
            "22310": rcMap.get('22310'),
            "22410": rcMap.get('22410'),
            "22490": rcMap.get('22490'),
            "22620": rcMap.get('22620'),
            "22670": rcMap.get('22670'),
            "22750": rcMap.get('22750'),
            "22830": rcMap.get('22830'),
            "22910": rcMap.get('22910'),
            "22980": rcMap.get('22980'),
            "23110": rcMap.get('23110'),
            "23190": rcMap.get('23190'),
            "23270": rcMap.get('23270'),
            "23350": rcMap.get('23350'),
            "23430": rcMap.get('23430'),
            "23670": rcMap.get('23670'),
            "23810": rcMap.get('23810'),
            "23940": rcMap.get('23940'),
            "24130": rcMap.get('24130'),
            "24210": rcMap.get('24210'),
            "24250": rcMap.get('24250'),
            "24330": rcMap.get('24330'),
            "24410": rcMap.get('24410'),
            "24600": rcMap.get('24600'),
            "24650": rcMap.get('24650'),
            "24780": rcMap.get('24780'),
            "24850": rcMap.get('24850'),
            "24900": rcMap.get('24900'),
            "24970": rcMap.get('24970'),
            "25060": rcMap.get('25060'),
            "25150": rcMap.get('25150'),
            "25250": rcMap.get('25250'),
            "25340": rcMap.get('25340'),
            "25430": rcMap.get('25430'),
            "25490": rcMap.get('25490'),
            "25620": rcMap.get('25620'),
            "25710": rcMap.get('25710'),
            "25810": rcMap.get('25810'),
            "25900": rcMap.get('25900'),
            "25990": rcMap.get('25990'),
            "26080": rcMap.get('26080'),
            "26170": rcMap.get('26170'),
            "26260": rcMap.get('26260'),
            "26350": rcMap.get('26350'),
            "26430": rcMap.get('26430'),
            "26490": rcMap.get('26490'),
            "26610": rcMap.get('26610'),
            "26670": rcMap.get('26670'),
            "26700": rcMap.get('26700'),
            "26730": rcMap.get('26730'),
            "26810": rcMap.get('26810'),
            "26890": rcMap.get('26890'),
            "26980": rcMap.get('26980'),
            "27070": rcMap.get('27070'),
            "27170": rcMap.get('27170'),
            "27260": rcMap.get('27260'),
            "27350": rcMap.get('27350'),
            "27450": rcMap.get('27450'),
            "27630": rcMap.get('27630'),
            "29399": rcMap.get('29399'),
            "29499": rcMap.get('29499'),
            "29799": rcMap.get('29799')
        };
        //Set colors
        $.ajax({
            /**/
            url: '@Url.Action("setCodeColors", "Map")',
            /**/
            type: 'POST',
            data: { json: JSON.stringify(myData) },
            success: function (data) {
                initCodeColor = true;
                if (initCodeColor && initMap) {
                    //loader
                    $("#loader").removeClass("is-active");
                }
            },
        });
    }
        function easing(t) {
            return t * (2 - t);
        }
        function shrinkMap() {
            if (!moved) {
                var deltaDistance = 300;
                map.panBy([-deltaDistance, 0], {
                    easing: easing
                });
            }
            moved = true;
        }


        function extendMap() {
            if (moved) {
                var deltaDistance = 300;
                map.panBy([deltaDistance, 0], {
                    easing: easing
                });
            }
            moved = false;
        }
    function flytoPoly(LGA_Code) {

        var features = lga["features"];
        //map.setFilter('state-fills', ['==', ['number', ['get', 'LGA_CODE18']], LGA_Code]);
        if (features) {
            if (features.length) {

                var feat;
                features.forEach(function (feature) {
                    if (parseInt(feature.properties.LGA_CODE18) === LGA_Code) {

                        feat = feature;
                        $.ajax({
                            /**/
                            url: '@Url.Action("getLngLat", "Map")',
                            /**/
                            type: 'POST',
                            data: { code: LGA_Code },
                            success: function (data) {
                                var item = JSON.parse(data);
                                var lat = item["latitude"]
                                var lng = item["longitude"]
                                var p = [lng - 0.5, lat]
                                map.flyTo({
                                    center: p,
                                    zoom: 8
                                });
                                var deltaDistance = 300;
                            },
                        });

                        if (hoveredStateId) {
                            map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
                        }
                        hoveredStateId = feat.id;
                        map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: true });

                        //        feat = feature;
                        //        var coords = feature.geometry.coordinates;
                        //        p = polylabel(coords, 1.0);
                    }
                });

            }
        }

    }

        function initCountryList() {
            $("#inputCountry").empty();
             $.ajax({
            /**/
            url: '@Url.Action("getAllCountry", "Map")',
            /**/
            type: 'POST',
            data: { },
                 success: function (data) {
                     var list = JSON.parse(data);
                     for (var i = 0; i < list.length; i++){
                         var value = list[i];
                         var o = new Option(value, value);
                        /// jquerify the DOM object 'o' so we can use the html method
                         $(o).html(value);
                        $("#inputCountry").append(o);
            }
            },
            });

        }

        
        function initRegionList() {
            $("#inputRegion").empty();
            $.ajax({
                /**/
                url: '@Url.Action("getAllRegions", "Map")',
                /**/
                type: 'POST',
                data: {},
                success: function (data) {
                    var list = JSON.parse(data);
                    for (var i = 0; i < list.length; i++) {
                        var item = list[i];
                        var value = item["code"];
                        var label = item["name"];
                        var o = new Option(value, value);
                        /// jquerify the DOM object 'o' so we can use the html method
                        $(o).html(label);
                        $("#inputRegion").append(o);
                    }
                },
            });

        }
    //Generate Color
        formRegionColorMap();
        var moved = false;
    //showChart();

        var list = document.getElementById('list');
        var slist = document.getElementById('slist');
        var recomdList = document.getElementById('recomd-list');

        function resetAll() {
            extendMap();
            $('#info-card').fadeOut(300);
            $('#culture-card').fadeOut(300);
            resetLayer();
            selected = "";
            list.innerHTML = slist.innerHTML = recomdList.innerHTML = "";
        }

        $(document).click(function () {
            $("#dropdown").hide();
        });


    $(document).ready(function () {
        initCountryList();
        initRegionList();
        for (var i = 0; i < allCode.length; i++) {
            cheo[allCode[i]] = "#ddd";
            textColor[allCode[i]] = "#333";
        }


        //Reset as tab changed
        //$('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        //});

        //$(window).scroll(function () {
        //    if ($(window).scrollTop <= 50) {
        //        $(".mmap").css("bottom", 50 - $(window).scrollTop() ); //I want this value to change dynamically as the scrollbar moves down, so that the div stays on top of screen
        //    } else {
        //        $(".mmap").css("bottom", 100 - $(window).scrollTop() );
        //    }
        //});

    });

    map.on('load', function () {
        // Add a layer showing the places.
        map.addSource("states", {
            "type": "geojson",
            "data": lga
        });
        //All colored states layer
        map.addLayer({
            "id": "state-fills",
            "type": "fill",
            "source": "states",
            "layout": { 'visibility': 'visible' },
            "paint": {
                "fill-color":
                    ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", myData]],
                "fill-opacity": ["case",
                    ["boolean", ["feature-state", "hover"], false],
                    0.9,
                    0.3
                ]
            }
        });

        //Generated layer
        map.addLayer({
            "id": "cheo",
            "type": "fill",
            "source": "states",
            "layout": { 'visibility': 'none' },
            "paint": {
                "fill-color":
                    ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", cheo]],
                "fill-opacity": ["case",
                    ["boolean", ["feature-state", "hover"], false],
                    1,
                    0.5
                ]
            }
        });


        var featureCollection = {
            "type": "FeatureCollection",

            "features": [

            ]
        }
        lga.features.forEach(function (feature) {
            //draw.add(feature);
            if (feature.geometry != null) {

                var centroidPt = turf.center(feature);
                centroidPt.properties.title = feature.properties.LGA_NAME18;
                centroidPt.properties.LGA_CODE18 = feature.properties.LGA_CODE18;
                featureCollection.features.push(centroidPt);
            }
        })

        map.addSource('label', {
            'type': 'geojson',
            'data': featureCollection
        });

        map.addLayer({
            "id": "region-label",
            "type": "symbol",
            "source": "label",
            "layout": {
                'text-field': '{title}',
                'text-font': ["Lato Bold"],
                'text-size': {
                    "base": 2,
                    "stops": [
                        [12, 12],
                        [16, 16]
                    ]
                },
                "text-padding": 3,
                "text-letter-spacing": 0.1,
                "text-max-width": 7
            },
            "paint": {
                "text-color":
                    ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", textColor]],
                "text-halo-color": "hsl(0, 0%, 100%)",
                "text-halo-width": 1.5,
                "text-halo-blur": 1
            }
        });
        //var popup = new mapboxgl.Popup({
        //    closeButton: false,
        //    closeOnClick: false
        //});

        // When the user moves their mouse over the state-fill layer, we'll update the
        // feature state for the feature under the mouse.
        map.on("mousemove", "state-fills", function (e) {
            map.getCanvas().style.cursor = e.point.length ? 'pointer' : '';

            if (e.features.length > 0) {
                if (hoveredStateId) {
                    map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
                }
                hoveredStateId = e.features[0].id;
                map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: true });
            }

            var coordinates = e.features[0].geometry.coordinates.slice();
            var code = e.features[0].properties.LGA_CODE18;

            // Ensure that if the map is zoomed out such that multiple
            // copies of the feature are visible, the popup appears
            // over the copy being pointed to.
            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
            }

            // Populate the popup and set its coordinates
            // based on the feature found.
            //popup.setLngLat([e.lngLat.lng, e.lngLat.lat])
            //    .setHTML(code + ', ' + e.lngLat.lat + ', ' + e.lngLat.lng)
            //    .addTo(map);
        });

        // When the mouse leaves the state-fill layer, update the feature state of the
        // previously hovered feature.
        map.on("mouseleave", "state-fills", function (e) {

            //map.getCanvas().style.cursor = e.point.length ? 'default' : '';

            map.getCanvas().style.cursor = '';
            //popup.remove();

            if (hoveredStateId) {
                map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
            }
            hoveredStateId = null;
        });

        //Show information block and hover effect
        map.on('mousemove', "cheo", function (e) {
            var over = document.getElementById('features');
            if (showCheoBlock)
                features.style.display = "block";
            else
                features.style.display = "none";

            var states = map.queryRenderedFeatures(e.point);
            if (states.length > 0) {
                for (var i = 0; i < states.length; i++) {
                    if (states[0].layer.id == "cheo") {
                        var name = states[0].properties.LGA_NAME18.substring(0, states[0].properties.LGA_NAME18.indexOf(" ("));
                        document.getElementById('pd').innerHTML = '<h5><strong>' + name + '</strong></h5><div class="content-line">' + displayList[states[0].properties.LGA_CODE18] + '</div>';
                        break;
                    }
                }
            } else {
                document.getElementById('pd').innerHTML = '<p>Hover over a state!</p>';
            }

            if (e.features.length > 0) {
                if (hoveredStateId) {
                    map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
                }
                hoveredStateId = e.features[0].id;
                map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: true });
            }
        });

        //Reset information block and hover effect
        map.on('mouseleave', "cheo", function (e) {
            var over = document.getElementById('features');
            features.style.display = "none"

            if (hoveredStateId) {
                map.setFeatureState({ source: 'states', id: hoveredStateId }, { hover: false });
            }
            hoveredStateId = null;
        });
        //Popup regions name
        map.on('click', 'state-fills', function (e) {
            
            var lgaCode = e.features[0].properties.LGA_CODE18;
            

            var content2 = document.querySelector('#card-content-2');
            content2.style.display = "none";
            var content1 = document.querySelector('#card-content');
            content1.style.display = "block";

            var content = document.querySelector('#more-content');

            content.style.display = "none";
            var image = document.querySelector('#card-image');
            image.style.display = "none";
            var video = document.querySelector('#card-video');
            video.style.display = "none";
            $.ajax({
                /**/
                url: '@Url.Action("getInfo", "Map")',
                /**/
                type: 'POST',
                data: { code: lgaCode },
                success: function (data) {
                    var item = JSON.parse(data);
                    var description = item["descrption"];
                    var image_link = item["image"];
                    var video_link = item["video"];
                    var name = item["name"];
                    var region = item["region"];

                    // Display airport info
                    document.querySelector('#card-title').innerText = name;
                    document.querySelector('#card-subtitle').innerText = region;

                    document.querySelector('#card-description').innerText = description;
                    
                    image.src = image_link;
                    video.src = video_link;
                    
                    $('#more-content').fadeIn(200);
                    {
                    //function loaded() {

                    //    // Display airport info
                    //    document.querySelector('#card-title').innerText = name;
                    //    document.querySelector('#card-subtitle').innerText = region;

                    //    document.querySelector('#card-description').innerText = description;


                    //    if ($('#info-card').filter(':visible').length == 0) // all hidden
                    //    {
                    //        $('#info-card').fadeIn(300);
                    //    }


                    //    // Ensure the info box is visible
                    //    document.querySelector('#info-card').style.display = 'block';

                    //}

                    //if (video.complete) {
                    //    loaded()
                    //} else {
                    //    video.addEventListener('load', loaded)
                    //    video.addEventListener('error', function () {
                    //        alert('error')
                    //    })
                    //}
                    }
                    function iloaded() {
                        //image.style.display = "block";
                        $('#card-image').fadeIn(200);
                    }

                    function vloaded() {
                        //video.style.display = "block";
                        $('#card-video').fadeIn(200);
                    }

                    if (image.complete) {
                        iloaded()
                    } else {
                        image.addEventListener('load', iloaded)
                    }

                    if (video.complete) {
                        vloaded()
                    } else {
                        video.addEventListener('load', vloaded)
                    }

                    if ($('#info-card').filter(':visible').length == 0) // all hidden
                    {
                        shrinkMap();
                        $('#info-card').fadeIn(300);
                        $('#culture-card').fadeOut(300);
                    }
                    
                    
                    // Ensure the info box is visible
                    document.querySelector('#info-card').style.display = 'block';

                },
            });
            {
            //new mapboxgl.Popup()
            //    .setLngLat(e.lngLat)
            //    .setHTML(name)
            //    .addTo(map);

            // Create a popup, but don't add it to the map yet.
            //var popup = new mapboxgl.Popup({
            //    closeButton: false,
            //    closeOnClick: true
            //});

            //popup.setLngLat(e.lngLat)
            //    .setHTML(name)
            //    .addTo(map);
            }

        });

        map.on('idle', function () {
            initMap = true;
            if (initCodeColor && initMap) {
                //Loader
                $("#loader").removeClass("is-active");

            }
        });


    });

        document.querySelector('#info-card-close-button').addEventListener('click', function (event) {
            //document.querySelector('#info-card').style.display = 'none';
            
            //$('#info-card').fadeOut(300);
            resetAll();
        });

        document.querySelector('#culture-card-close-button').addEventListener('click', function (event) {
            //document.querySelector('#info-card').style.display = 'none';

            //$('#info-card').fadeOut(300);
            resetAll();
        });

        document.querySelector('#info-card-close-button-2').addEventListener('click', function (event) {
            //document.querySelector('#info-card').style.display = 'none';

            resetAll();
            //$('#info-card').fadeOut(300);
        });

    //Monitor select type changes
    function changeSelect() {
        var typeSelectValue = $("#sel2").val();

        if (typeSelectValue == "House") {
            $("#sel1").val("2");
            $('#sel1').find('option:contains(1)').prop('disabled', true);
            $('#sel1').find('option:contains(4)').prop('disabled', false);
        }
        else {

            $('#sel1').find('option:contains(1)').prop('disabled', false);
            $("#sel1").val("1");
            $('#sel1').find('option:contains(4)').prop('disabled', true);
        }
    }


    var stateLegend = document.getElementById('state-legend');
    var stateCrimeLegend = document.getElementById('state-crime-legend');
    var stateDesyLegend = document.getElementById('state-density-legend');
    //Reset Layers
    function resetLayer() {

        for (var i = 0; i < allCode.length; i++) {
            cheo[allCode[i]] = "#ddd";
            textColor[allCode[i]] = "#333";
        }

        map.setPaintProperty("region-label", 'text-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", textColor]]);

        map.setLayoutProperty("state-fills", 'visibility', 'visible');
        map.setLayoutProperty("cheo", 'visibility', 'none');

        stateLegend.style.display = 'none';
        stateCrimeLegend.style.display = 'none';
        stateDesyLegend.style.display = 'none';


    }
    var displayList = new Object

    //Show filter map
    function choropleth(option) {

        recomdList.style.display = "none";
        $("#loader").addClass("is-active");
        //Rent
        if (option == "a") {

            document.querySelector('#list-name').innerHTML = "Rent";
            list.style.display = "block";
            slist.style.display = "none";
            var sel1 = jQuery("#sel1 option:selected").val();
            var sel2 = jQuery("#sel2 option:selected").val();

            $.ajax({
                /**/
                url: '@Url.Action("getContent", "Map")',
                /**/
                type: 'POST',
                data: { require: "a", bedroom: sel1, type: sel2 },
                success: function (data) {
                    var tmpObj = JSON.parse(data);
                    for (var i = 0; i < tmpObj["result"].length; i++) {
                        var item = tmpObj["result"][i];
                        var code = item["code"];
                        var color = item["color"];
                        var display = item["display"]
                        cheo[code] = color;
                        if (color === '#ddd') {
                            textColor[code] = '#999';
                        }
                        else {
                            textColor[code] = '#333';
                        }
                        displayList[code] = display;

                    }

                    if ($('#info-card').filter(':visible').length == 0) // all hidden
                    {
                        shrinkMap();
                        $('#info-card').fadeIn(300);
                        //$('#culture-card').fadeOut(300);
                    }
                    $('#culture-card').fadeOut(300);
                    $('#card-content-2').fadeIn(300);
                    $('#card-content').fadeOut(200);
                    var displayText = tmpObj["displayText"];
                    list.innerHTML = displayText;
                    stateLegend.style.display = "block"
                    stateCrimeLegend.style.display = "none"
                    stateDesyLegend.style.display = "none"

                    showCheoBlock = true;
                    map.setPaintProperty("region-label", 'text-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", textColor]]);

                    map.setPaintProperty("cheo", 'fill-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", cheo]]);
                    map.setLayoutProperty("state-fills", 'visibility', 'none');
                    map.setLayoutProperty("cheo", 'visibility', 'visible');

                    $("#loader").removeClass("is-active");

                },
            });
        }
        //Safety
        else if (option == "c") {
            list.style.display = "none";
            slist.style.display = "block";
            document.querySelector('#card-content').style.display = "none";
            document.querySelector('#list-name').innerHTML = "Criminal Situation";
            $.ajax({
                /**/
                url: '@Url.Action("getContent", "Map")',
                /**/
                type: 'POST',
                data: { require: "c" },
                success: function (data) {
                    var tmpObj = JSON.parse(data);
                    for (var i = 0; i < tmpObj["result"].length; i++) {
                        var item = tmpObj["result"][i];
                        var code = item["code"];
                        var color = item["color"];
                        var display = item["display"]
                        cheo[code] = color;
                        if (color === '#ddd') {
                            textColor[code] = '#999';
                        }
                        else {
                            textColor[code] = '#333';
                        }
                        displayList[code] = display;
                    }


                    if ($('#info-card').filter(':visible').length == 0) // all hidden
                    {
                        shrinkMap();
                        $('#info-card').fadeIn(300);
                        //$('#culture-card').fadeOut(300);
                    }
                    $('#culture-card').fadeOut(300);
                    $('#card-content-2').fadeIn(300);
                    $('#card-content').fadeOut(200);
                    var displayText = tmpObj["displayText"];
                    slist.innerHTML = displayText;
                    stateCrimeLegend.style.display = "block"
                    stateLegend.style.display = "none"
                    stateDesyLegend.style.display = "none"

                    showCheoBlock = true;

                    map.setPaintProperty("region-label", 'text-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", textColor]]);

                    map.setPaintProperty("cheo", 'fill-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", cheo]]);
                    map.setLayoutProperty("state-fills", 'visibility', 'none');
                    map.setLayoutProperty("cheo", 'visibility', 'visible');

                    $("#loader").removeClass("is-active");
                },
            });
        }
        //Population density
        else if (option == "d") {
            slist.style.display = "block";
            list.style.display = "none";
            document.querySelector('#card-content').style.display = "none";
            document.querySelector('#list-name').innerHTML = "Population Situation<div class='text--very--small'><p><small>Density: The number of person per km<sup>2</sup> </small></p></div>";
            $.ajax({
                /**/
                url: '@Url.Action("getContent", "Map")',
                /**/
                type: 'POST',
                data: { require: "d" },
                success: function (data) {
                    var tmpObj = JSON.parse(data);
                    for (var i = 0; i < tmpObj["result"].length; i++) {
                        var item = tmpObj["result"][i];
                        var code = item["code"];
                        var color = item["color"];
                        var display = item["display"]
                        cheo[code] = color;
                        if (color === '#ddd') {
                            textColor[code] = '#999';
                        }
                        else {
                            textColor[code] = '#333';
                        }
                        displayList[code] = display;
                    }

                    if ($('#info-card').filter(':visible').length == 0) // all hidden
                    {
                        shrinkMap();
                        $('#info-card').fadeIn(300);
                    }
                    $('#culture-card').fadeOut(300);
                    $('#card-content-2').fadeIn(300);
                    $('#card-content').fadeOut(200);
                    var displayText = tmpObj["displayText"];
                    slist.innerHTML = displayText;

                    stateDesyLegend.style.display = "block"
                    stateLegend.style.display = "none"
                    stateCrimeLegend.style.display = "none"

                    showCheoBlock = true;

                    map.setPaintProperty("region-label", 'text-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", textColor]]);

                    map.setPaintProperty("cheo", 'fill-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", cheo]]);
                    map.setLayoutProperty("state-fills", 'visibility', 'none');
                    map.setLayoutProperty("cheo", 'visibility', 'visible');

                    $("#loader").removeClass("is-active");
                },
            });
        }

    }


    //var myChart;
    //var canvas = document.getElementById("myChart");
    //var ctx = canvas.getContext("2d");

    function showChart(count, label, value) {

        var values = [parseFloat(value), 100 - parseFloat(value)];
        var labels = [label, 'Others'];

        var config = {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    data: values,
                    backgroundColor: [
                        "#FF6384",
                        "#D3D3D3"
                    ],
                    hoverBackgroundColor: [
                        "#FF6384",
                        "#D3D3D3"
                    ]
                }]
            },
            options: {
                elements: {
                    center: {
                        text: values[0] + '%',
                        color: '#FF6384', // Default is #000000
                        fontStyle: 'Arial', // Default is Arial
                        sidePadding: 10 // Defualt is 20 (as a percentage)
                    }
                },
                legend: {
                    display: false
                }
            }
        };


        var ctx = document.getElementById("myChart" + count).getContext("2d");
        
        var myChart = new Chart(ctx, config);

        //dmbChart(150, 150, 125, 25, values, colors, labels, 0);

    }
    //test
    //initLanguageCharts("20110");

    function initLanguageCharts(lgaCode) {

        stateLegend.style.display = 'none';
        stateCrimeLegend.style.display = 'none';
        stateDesyLegend.style.display = 'none';
        $('#info-card').fadeOut(300);

        $.ajax({
            /**/
            url: '@Url.Action("getLan", "Map")',
            /**/
            type: 'POST',
            data: { code: lgaCode },
            success: function (data) {
                var result = JSON.parse(data);

                if ($('#culture-card').filter(':visible').length == 0) // all hidden
                {
                    shrinkMap();
                    $('#culture-card').fadeIn(300);
                }
                document.querySelector('#culture-title').innerHTML = "Top 10 Languages";
                resetChartjs();

                for (var i = 0; i < allCode.length; i++) {
                    cheo[allCode[i]] = "#ddd";
                    textColor[allCode[i]] = '#999';
                }
                cheo[lgaCode] = myData[lgaCode];
                textColor[lgaCode] = '#333'
                for (var i = 0; i < result.length; i++) {
                    var item = result[i];
                    var label = item["label"];
                    var value = item["value"];

                    var newElement = '<div class="ml-1 row"><div class="col-12 col-md-7 mt-2"> <h2 class="font--26 text--lebel">TOP ' + (i + 1)
                        + '</h2>' + '<h2 class="font--20 text--lebel font--bold mt-2 ml-1">' + label + ' </h2> </div> <div class="col-12 col-md-5"> <canvas id="myChart' + i + '"></canvas></div></div><hr>';

                    $('#culture-list-content').append(newElement);

                    showCheoBlock = false;

                    map.setPaintProperty("region-label", 'text-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", textColor]]);

                    map.setPaintProperty("cheo", 'fill-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", cheo]]);
                    map.setLayoutProperty("state-fills", 'visibility', 'none');
                    map.setLayoutProperty("cheo", 'visibility', 'visible');
                    showChart(i, label, value);
                }

            },
        });


    }


    //test
    //initCountryCharts("20110");
    function initCountryCharts(lgaCode) {

        stateLegend.style.display = 'none';
        stateCrimeLegend.style.display = 'none';
        stateDesyLegend.style.display = 'none';
        $('#info-card').fadeOut(300);

        $.ajax({
            /**/
            url: '@Url.Action("getCountry", "Map")',
            /**/
            type: 'POST',
            data: { code: lgaCode },
            success: function (data) {
                var result = JSON.parse(data);

                resetChartjs();

                for (var i = 0; i < allCode.length; i++) {
                    cheo[allCode[i]] = "#ddd";
                    textColor[allCode[i]] = '#999';
                }
                cheo[lgaCode] = myData[lgaCode];
                textColor[lgaCode] = '#333'

                if ($('#culture-card').filter(':visible').length == 0) // all hidden
                {
                    shrinkMap();
                    $('#culture-card').fadeIn(300);
                }
                document.querySelector('#culture-title').innerHTML = "Top 10 Birth Countries";
                for (var i = 0; i < (result.length < 10 ? result.length : 10); i++) {
                    var item = result[i];
                    var label = item["label"];
                    var value = item["value"];
                    var newElement = '<div class="ml-1 row"><div class="col-12 col-md-7 mt-2"> <h2 class="font--26 text--lebel">TOP '+ (i+1)
                        + '</h2>' + '<h2 class="font--20 text--lebel font--bold mt-2 ml-1">'+label+' </h2> </div> <div class="col-12 col-md-5"> <canvas id="myChart' + i + '"></canvas></div></div><hr>';
                    
                    $('#culture-list-content').append(newElement);

                    showCheoBlock = false;

                    map.setPaintProperty("region-label", 'text-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", textColor]]);

                    map.setPaintProperty("cheo", 'fill-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", cheo]]);
                    map.setLayoutProperty("state-fills", 'visibility', 'none');
                    map.setLayoutProperty("cheo", 'visibility', 'visible');

                    showChart(i, label, value);
                }

            },
        });


    }

    function initRegionCharts(country) {

        $('#info-card').fadeOut(300);

        stateLegend.style.display = 'none';
        stateCrimeLegend.style.display = 'none';
        stateDesyLegend.style.display = 'none';
        $.ajax({
            /**/
            url: '@Url.Action("getRegions", "Map")',
            /**/
            type: 'POST',
            data: { country: country },
            success: function (data) {
                var result = JSON.parse(data);
                resetChartjs();


                if ($('#culture-card').filter(':visible').length == 0) // all hidden
                {
                    shrinkMap();
                    $('#culture-card').fadeIn(300);
                }
                document.querySelector('#culture-title').innerHTML = "Top 10 Regions<div class='text--very--small'><p><small>See which region has the most population from your country</small></p></div>";

                for (var i = 0; i < allCode.length; i++) {
                    cheo[allCode[i]] = "#ddd";
                    textColor[allCode[i]] = '#999';
                }

                for (var i = 0; i < (result.length < 10 ? result.length : 10); i++) {
                    var item = result[i];
                    var label = item["label"];
                    var value = item["value"];
                    var code = item["code"];
                    var extra = "";
                    if (code === "-1") {
                        extra = "Not Regional Area";
                    }
                    else {
                        cheo[code] = myData[code];
                        textColor[code] = '#333';
                    }

                    var newElement = '<a style="text-decoration:none" href="javascript:flytoPoly(' + code + ')" class="ml-1 row"><div class="col-12 col-md-7 mt-2"> <h2 class="font--26 text--lebel">TOP '
                        + (i + 1)
                        + '</h2>' + '<h2 class="font--20 text--lebel font--bold mt-2 ml-1">' + label + '</h2>' +
                        '<div class="text--very--small text--lebel p-1"><p><small>' + extra +
                        ' </small></p></div> </div> <div class="col-12 col-md-5"> <canvas id="myChart' + i + '"></canvas></div></a><hr>';

                    $('#culture-list-content').append(newElement);

                    showCheoBlock = false;

                    map.setPaintProperty("region-label", 'text-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", textColor]]);

                    map.setPaintProperty("cheo", 'fill-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", cheo]]);
                    map.setLayoutProperty("state-fills", 'visibility', 'none');
                    map.setLayoutProperty("cheo", 'visibility', 'visible');

                    showChart(i, label, value);
                }

            },
        });


        }


        function resetChartjs() {

            Chart.pluginService.register({
                beforeDraw: function (chart) {
                    if (chart.config.options.elements.center) {
                        //Get ctx from string
                        var ctx = chart.chart.ctx;

                        //Get options from the center object in options
                        var centerConfig = chart.config.options.elements.center;
                        var fontStyle = centerConfig.fontStyle || 'Arial';
                        var txt = centerConfig.text;
                        var color = centerConfig.color || '#000';
                        var sidePadding = centerConfig.sidePadding || 20;
                        var sidePaddingCalculated = (sidePadding / 100) * (chart.innerRadius * 2)
                        //Start with a base font of 30px
                        ctx.font = "30px " + fontStyle;

                        //Get the width of the string and also the width of the element minus 10 to give it 5px side padding
                        var stringWidth = ctx.measureText(txt).width;
                        var elementWidth = (chart.innerRadius * 2) - sidePaddingCalculated;

                        // Find out how much the font can grow in width.
                        var widthRatio = elementWidth / stringWidth;
                        var newFontSize = Math.floor(30 * widthRatio);
                        var elementHeight = (chart.innerRadius * 2);

                        // Pick a new font size so it will not be larger than the height of label.
                        var fontSizeToUse = Math.min(newFontSize, elementHeight);

                        //Set font settings to draw it correctly.
                        ctx.textAlign = 'center';
                        ctx.textBaseline = 'middle';
                        var centerX = ((chart.chartArea.left + chart.chartArea.right) / 2);
                        var centerY = ((chart.chartArea.top + chart.chartArea.bottom) / 2);
                        ctx.font = fontSizeToUse + "px " + fontStyle;
                        ctx.fillStyle = color;

                        //Draw text in center
                        ctx.fillText(txt, centerX, centerY);
                    }
                }
            });
        }


    //window.onscroll = function () { myFunction() };

    //// Get the offset position of the navbar
    //var sticky = map.offsetTop;

    //// Add the sticky class to the header when you reach its scroll position. Remove "sticky" when you leave the scroll position
    //function myFunction() {
    //    if (window.pageYOffset > sticky) {
    //        map.classList.add("sticky");
    //    } else {
    //        map.classList.remove("sticky");
    //    }
    //}
    var acmWeight;
    var crmWeight;
    var pouWeight;

    var $acmrange = $(".acmSlider"),
        instance,
        min = 0,
        max = 10

    $acmrange.ionRangeSlider({
        skin: "round",
        type: "single",
        min: min,
        max: max,
        from: 5,
        values: [
            "Not important", "Not important", "Less important", "Less important", "Average",
            "Average", "Average", "Important", "Important", "Very Important", "Very Important"
        ],
        onStart: updateA,
        onFinish: updateA
    });
    instance = $acmrange.data("ionRangeSlider");

    function updateA(data) {
        acmWeight = data.from;
        if (toggleRecomd) {
            //acmslider.disabled = true;
            recommendation();
        }
    }


    var $crmrange = $(".crmSlider"),
        instance,
        min = 0,
        max = 10

    $crmrange.ionRangeSlider({
        skin: "round",
        type: "single",
        min: min,
        max: max,
        from: 5,
        values: [
            "Not important", "Not important", "Less important", "Less important", "Average",
            "Average", "Average", "Important", "Important", "Very Important", "Very Important"
        ],
        onStart: updateC,
        onFinish: updateC
    });
    instance = $crmrange.data("ionRangeSlider");

    function updateC(data) {
        crmWeight = data.from;
        if (toggleRecomd) {
            //acmslider.disabled = true;
            recommendation();
        }
    }


    var $pourange = $(".pouSlider"),
        instance,
        min = 0,
        max = 10

    $pourange.ionRangeSlider({
        skin: "round",
        type: "single",
        min: min,
        max: max,
        from: 5,
        values: [
            "Not important", "Not important", "Less important", "Less important", "Average",
            "Average", "Average", "Important", "Important", "Very Important", "Very Important"
        ],
        onStart: updateP,
        onFinish: updateP
    });
    instance = $pourange.data("ionRangeSlider");

    function updateP(data) {
        pouWeight = data.from;
        if (toggleRecomd) {
            //acmslider.disabled = true;
            recommendation();
        }
    }




    var $rrange = $(".recommendRanger"),
        instance,
        min = 100,
        max = 1100,
        from = 0,
        to = 0;

    $rrange.ionRangeSlider({
        skin: "round",
        type: "double",
        min: min,
        max: max,
        from: 100,
        to: 1100,
        prefix: "$",
        step: 10,
        grid: true,             // show/hide grid
        onStart: updateRecommendInputs,
        onChange: updateRecommendInputs
    });
    instance = $rrange.data("ionRangeSlider");


    function updateRecommendInputs(data) {
        from = data.from;
        to = data.to;
        minRBudget = from;
        maxRBudget = to;
    }

    //Recommendation

    function recommendation() {

        slist.style.display = "none";
        list.style.display = "none";
        recomdList.style.display = "block";

        stateLegend.style.display = 'none';
        stateCrimeLegend.style.display = 'none';
        stateDesyLegend.style.display = 'none';
        //Loader
        $("#loader").addClass("is-active");
        recomdList.innerHTML = "";

        //var minBudget = parseInt(document.getElementById("min-bgt-recom").value);
        //var maxBudget = parseInt(document.getElementById("max-bgt-recom").value);
        minRBudget = isNaN(minRBudget) ? 0 : minRBudget;
        maxRBudget = isNaN(maxRBudget) ? 1000 : maxRBudget;

        var calAcmWeight = acmWeight;
        var calCrmWeight = crmWeight;
        var calPouWeight = pouWeight;
        var sum = calAcmWeight + calCrmWeight + calPouWeight;
        calAcmWeight /= sum
        calCrmWeight /= sum
        calPouWeight /= sum


        document.querySelector('#card-content').style.display = "none";
        document.querySelector('#list-name').innerHTML = "Recommendation result";

        $.ajax({
            /**/
            url: '@Url.Action("getRecommendation", "Map")',
            /**/
            type: 'POST',
            data: { min: minRBudget, max: maxRBudget, acmWeight: calAcmWeight, crmWeight: calCrmWeight, pouWeight: calPouWeight },
            success: function (data) {
                toggleRecomd = true;

                var result = JSON.parse(data);
                var areas = result["areas"];
                for (var i = 0; i < allCode.length; i++) {
                    cheo[allCode[i]] = "#ddd";
                    displayList[allCode[i]] = "";
                    textColor[allCode[i]] = '#999';
                }
                for (var i = 0; i < areas.length; i++) {
                    var code = areas[i];
                    cheo[code] = myData[code];
                    textColor[code] = '#333';
                }

                if ($('#info-card').filter(':visible').length == 0) // all hidden
                {
                    shrinkMap();
                    $('#info-card').fadeIn(300);
                    $('#culture-card').fadeOut(300);
                }
                $('#card-content-2').fadeIn(300);
                $('#card-content').fadeOut(200);
                recomdList.innerHTML = result["display"];

                showCheoBlock = false;

                map.setPaintProperty("region-label", 'text-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", textColor]]);

                map.setPaintProperty("cheo", 'fill-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", cheo]]);
                map.setLayoutProperty("state-fills", 'visibility', 'none');
                map.setLayoutProperty("cheo", 'visibility', 'visible');

                //acmslider.disabled = false;
                //crmSlider.disabled = false;
                //pouSlider.disabled = false;

                //Loader
                $("#loader").removeClass("is-active");
            },
        });

    }

    var $frange = $(".filterRanger"),
        instance,
        min = 100,
        max = 1100,
        from = 0,
        to = 0;

    $frange.ionRangeSlider({
        skin: "round",
        type: "double",
        min: min,
        max: max,
        from: 100,
        to: 1100,
        step: 10,            // default 1 (set step)
        prefix: "$",
        grid: true,             // show/hide grid
        onStart: updateFilterInputs,
        onChange: updateFilterInputs
    });
    instance = $frange.data("ionRangeSlider");

    function updateFilterInputs(data) {
        from = data.from;
        to = data.to;
        minFBudget = from;
        maxFBudget = to;
    }

    //Filter
    function filter() {

        slist.style.display = "none";
        list.style.display = "block";
        recomdList.style.display = "none";


        stateLegend.style.display = 'none';
        stateCrimeLegend.style.display = 'none';
        stateDesyLegend.style.display = 'none';

        var filterList = document.getElementById('list');
        filterList.innerHTML = "";
        //var minBudget = parseInt(document.getElementById("min-bgt").value);
        //var maxBudget = parseInt(document.getElementById("max-bgt").value);
        minFBudget = isNaN(minFBudget) ? 0 : minFBudget;
        maxFBudget = isNaN(maxFBudget) ? 1000 : maxFBudget;

        document.querySelector('#card-content').style.display = "none";
        document.querySelector('#list-name').innerHTML = "Regions";
        
        $("#loader").addClass("is-active");
        $.ajax({
            /**/
            url: '@Url.Action("filterRent", "Map")',
            /**/
            type: 'POST',
            data: { min: minFBudget, max: maxFBudget },
            success: function (data) {
                var result = JSON.parse(data);
                var areas = result["areas"];
                for (var i = 0; i < allCode.length; i++) {
                    cheo[allCode[i]] = "#ddd";
                    displayList[allCode[i]] = "";
                }
                for (var i = 0; i < areas.length; i++) {
                    var code = areas[i];
                    cheo[code] = myData[code];
                    if (cheo[code] === '#ddd') {
                        textColor[code] = '#999';
                    }
                    else {
                        textColor[code] = '#333';
                    }
                }


                //document.querySelector('#card-content-2').style.display = "block";


                if ($('#info-card').filter(':visible').length == 0) // all hidden
                {
                    shrinkMap();
                    $('#info-card').fadeIn(300);
                    $('#culture-card').fadeOut(300);
                }
                $('#card-content-2').fadeIn(200);
                $('#card-content').fadeOut(200);

                filterList.innerHTML = result["display"];
                showCheoBlock = false;
                map.setPaintProperty("region-label", 'text-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", textColor]]);

                map.setPaintProperty("cheo", 'fill-color', ["get", ["to-string", ["get", "LGA_CODE18"]], ["literal", cheo]]);
                map.setLayoutProperty("state-fills", 'visibility', 'none');
                map.setLayoutProperty("cheo", 'visibility', 'visible');

                $("#loader").removeClass("is-active");
            },
        });


    }

    //Get month number
    function getMonthFromString(mon) {
        return new Date(Date.parse(mon + " 1, 2012")).getMonth() + 1
    }
    //is number
    function isNumber(str) {
        val = parseInt(str)
        if (isNaN(val))
            return false;
        return true;
    }
    //is NAN?
    function processNumber(str) {
        val = parseInt(str)
        if (isNaN(val))
            return str;
        return val;
    }
    
    </script>

    <!-- Contact form JavaScript -->
    <script src="/js/jqBootstrapValidation.js"></script>
    <script src="/js/contact_me.js"></script>
    <!-- Custom scripts for this template -->
    <script src="/js/agency.min.js"></script>

</body>

</html>

